/*
 * generated by Xtext
 */
grammar InternalHIPIE;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.hipie.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.hipie.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.hipie.services.HIPIEGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private HIPIEGrammarAccess grammarAccess;
 	
    public InternalHIPIEParser(TokenStream input, HIPIEGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Program";	
   	}
   	
   	@Override
   	protected HIPIEGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	 iv_ruleProgram=ruleProgram 
	 { $current=$iv_ruleProgram.current; } 
	 EOF 
;

// Rule Program
ruleProgram returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getComposition_headerCompositionHeaderParserRuleCall_0_0()); 
	    }
		lv_composition_header_0_0=ruleCompositionHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"composition_header",
        		lv_composition_header_0_0, 
        		"CompositionHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getBase_propsBasePropParserRuleCall_1_0()); 
	    }
		lv_base_props_1_0=ruleBaseProp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"base_props",
        		lv_base_props_1_0, 
        		"BaseProp");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getPermissionsPermissionsParserRuleCall_2_0()); 
	    }
		lv_permissions_2_0=rulePermissions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"permissions",
        		lv_permissions_2_0, 
        		"Permissions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getInput_sectionInputSectionParserRuleCall_3_0()); 
	    }
		lv_input_section_3_0=ruleInputSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"input_section",
        		lv_input_section_3_0, 
        		"InputSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getContract_instancesContractInstanceParserRuleCall_4_0()); 
	    }
		lv_contract_instances_4_0=ruleContractInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"contract_instances",
        		lv_contract_instances_4_0, 
        		"ContractInstance");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getOutput_sectionOutputSectionParserRuleCall_5_0()); 
	    }
		lv_output_section_5_0=ruleOutputSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"output_section",
        		lv_output_section_5_0, 
        		"OutputSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getIntegrate_sectionIntegrateSectionParserRuleCall_6_0()); 
	    }
		lv_integrate_section_6_0=ruleIntegrateSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		set(
       			$current, 
       			"integrate_section",
        		lv_integrate_section_6_0, 
        		"IntegrateSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getVisual_sectionVisualSectionParserRuleCall_7_0()); 
	    }
		lv_visual_section_7_0=ruleVisualSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"visual_section",
        		lv_visual_section_7_0, 
        		"VisualSection");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getGenerate_sectionGenerateSectionParserRuleCall_8_0()); 
	    }
		lv_generate_section_8_0=ruleGenerateSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"generate_section",
        		lv_generate_section_8_0, 
        		"GenerateSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getCustom_sectionCustomSectionParserRuleCall_9_0()); 
	    }
		lv_custom_section_9_0=ruleCustomSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"custom_section",
        		lv_custom_section_9_0, 
        		"CustomSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getProgramAccess().getResource_sectionResourceSectionParserRuleCall_10_0()); 
	    }
		lv_resource_section_10_0=ruleResourceSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgramRule());
	        }
       		add(
       			$current, 
       			"resource_section",
        		lv_resource_section_10_0, 
        		"ResourceSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleBaseProp
entryRuleBaseProp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasePropRule()); }
	 iv_ruleBaseProp=ruleBaseProp 
	 { $current=$iv_ruleBaseProp.current; } 
	 EOF 
;

// Rule BaseProp
ruleBaseProp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_name_0_0=	'NAME' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getBasePropAccess().getNameNAMEKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "NAME");
	    }

)
)
    |(
(
		lv_name_1_0=	'DESCRIPTION' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getBasePropAccess().getNameDESCRIPTIONKeyword_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "DESCRIPTION");
	    }

)
)
    |(
(
		lv_name_2_0=	'AUTHOR' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getBasePropAccess().getNameAUTHORKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "AUTHOR");
	    }

)
)
    |(
(
		lv_name_3_0=	'LICENSE' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getBasePropAccess().getNameLICENSEKeyword_0_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "LICENSE");
	    }

)
)
    |(
(
		lv_name_4_0=	'COPYRIGHT' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getBasePropAccess().getNameCOPYRIGHTKeyword_0_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "COPYRIGHT");
	    }

)
)
    |(
(
		lv_name_5_0=	'VERSION' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getBasePropAccess().getNameVERSIONKeyword_0_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "VERSION");
	    }

)
)
    |(
(
		lv_name_6_0=	'LABEL' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getBasePropAccess().getNameLABELKeyword_0_0_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "LABEL");
	    }

)
)
    |(
(
		lv_name_7_0=	'ID' 
    {
        newLeafNode(lv_name_7_0, grammarAccess.getBasePropAccess().getNameIDKeyword_0_0_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_7_0, "ID");
	    }

)
)
    |(
(
		lv_name_8_0=	'TEMPLATE' 
    {
        newLeafNode(lv_name_8_0, grammarAccess.getBasePropAccess().getNameTEMPLATEKeyword_0_0_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_8_0, "TEMPLATE");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getBasePropAccess().getVal_listValueListParserRuleCall_0_1_0()); 
	    }
		lv_val_list_9_0=ruleValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasePropRule());
	        }
       		set(
       			$current, 
       			"val_list",
        		lv_val_list_9_0, 
        		"ValueList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBasePropAccess().getSemicolonKeyword_0_2());
    }
)
    |((
(
		lv_name_11_0=	'CATEGORY' 
    {
        newLeafNode(lv_name_11_0, grammarAccess.getBasePropAccess().getNameCATEGORYKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasePropRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_11_0, "CATEGORY");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasePropAccess().getCat_listCategoryTypeListParserRuleCall_1_1_0()); 
	    }
		lv_cat_list_12_0=ruleCategoryTypeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasePropRule());
	        }
       		set(
       			$current, 
       			"cat_list",
        		lv_cat_list_12_0, 
        		"CategoryTypeList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBasePropAccess().getSemicolonKeyword_1_2());
    }
))
;





// Entry rule entryRuleCategoryType
entryRuleCategoryType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCategoryTypeRule()); }
	 iv_ruleCategoryType=ruleCategoryType 
	 { $current=$iv_ruleCategoryType.current; } 
	 EOF 
;

// Rule CategoryType
ruleCategoryType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=	'CLEAN' 
    {
        newLeafNode(lv_name_0_1, grammarAccess.getCategoryTypeAccess().getNameCLEANKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_1, null);
	    }

    |		lv_name_0_2=	'INPUT' 
    {
        newLeafNode(lv_name_0_2, grammarAccess.getCategoryTypeAccess().getNameINPUTKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_2, null);
	    }

    |		lv_name_0_3=	'APPEND' 
    {
        newLeafNode(lv_name_0_3, grammarAccess.getCategoryTypeAccess().getNameAPPENDKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_3, null);
	    }

    |		lv_name_0_4=	'LINK' 
    {
        newLeafNode(lv_name_0_4, grammarAccess.getCategoryTypeAccess().getNameLINKKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_4, null);
	    }

    |		lv_name_0_5=	'ANALYSIS' 
    {
        newLeafNode(lv_name_0_5, grammarAccess.getCategoryTypeAccess().getNameANALYSISKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_5, null);
	    }

    |		lv_name_0_6=	'CUSTOM' 
    {
        newLeafNode(lv_name_0_6, grammarAccess.getCategoryTypeAccess().getNameCUSTOMKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_6, null);
	    }

    |		lv_name_0_7=	'VISUALIZE' 
    {
        newLeafNode(lv_name_0_7, grammarAccess.getCategoryTypeAccess().getNameVISUALIZEKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_7, null);
	    }

    |		lv_name_0_8=	'OUTPUT' 
    {
        newLeafNode(lv_name_0_8, grammarAccess.getCategoryTypeAccess().getNameOUTPUTKeyword_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryTypeRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_8, null);
	    }

)

)
)
;





// Entry rule entryRuleCategoryTypeList
entryRuleCategoryTypeList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCategoryTypeListRule()); }
	 iv_ruleCategoryTypeList=ruleCategoryTypeList 
	 { $current=$iv_ruleCategoryTypeList.current; } 
	 EOF 
;

// Rule CategoryTypeList
ruleCategoryTypeList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryTypeListAccess().getCatsCategoryTypeParserRuleCall_0_0()); 
	    }
		lv_cats_0_0=ruleCategoryType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryTypeListRule());
	        }
       		add(
       			$current, 
       			"cats",
        		lv_cats_0_0, 
        		"CategoryType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCategoryTypeListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCategoryTypeListAccess().getCatsCategoryTypeParserRuleCall_1_1_0()); 
	    }
		lv_cats_2_0=ruleCategoryType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCategoryTypeListRule());
	        }
       		add(
       			$current, 
       			"cats",
        		lv_cats_2_0, 
        		"CategoryType");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValueAccess().getNameUTOKENParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleUTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"UTOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getValueAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_int_val_2_0=RULE_INT
		{
			newLeafNode(lv_int_val_2_0, grammarAccess.getValueAccess().getInt_valINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"int_val",
        		lv_int_val_2_0, 
        		"INT");
	    }

)
)
    |(
(
		lv_str_val_3_0=RULE_STRING
		{
			newLeafNode(lv_str_val_3_0, grammarAccess.getValueAccess().getStr_valSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str_val",
        		lv_str_val_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleValueList
entryRuleValueList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueListRule()); }
	 iv_ruleValueList=ruleValueList 
	 { $current=$iv_ruleValueList.current; } 
	 EOF 
;

// Rule ValueList
ruleValueList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValueListAccess().getValsValueParserRuleCall_0_0()); 
	    }
		lv_vals_0_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueListRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_0_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValueListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueListAccess().getValsValueParserRuleCall_1_1_0()); 
	    }
		lv_vals_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueListRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTOKEN
entryRuleTOKEN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTOKENRule()); } 
	 iv_ruleTOKEN=ruleTOKEN 
	 { $current=$iv_ruleTOKEN.current.getText(); }  
	 EOF 
;

// Rule TOKEN
ruleTOKEN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getTOKENAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleUTOKEN
entryRuleUTOKEN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUTOKENRule()); } 
	 iv_ruleUTOKEN=ruleUTOKEN 
	 { $current=$iv_ruleUTOKEN.current.getText(); }  
	 EOF 
;

// Rule UTOKEN
ruleUTOKEN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='_' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUTOKENAccess().get_Keyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getUTOKENAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;







// Entry rule entryRuleAssign
entryRuleAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignRule()); }
	 iv_ruleAssign=ruleAssign 
	 { $current=$iv_ruleAssign.current; } 
	 EOF 
;

// Rule Assign
ruleAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignAccess().getVals_lValueParserRuleCall_0_0()); 
	    }
		lv_vals_l_0_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignRule());
	        }
       		set(
       			$current, 
       			"vals_l",
        		lv_vals_l_0_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssignAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignAccess().getVals_rValueListParserRuleCall_2_0()); 
	    }
		lv_vals_r_2_0=ruleValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignRule());
	        }
       		set(
       			$current, 
       			"vals_r",
        		lv_vals_r_2_0, 
        		"ValueList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAssignList
entryRuleAssignList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignListRule()); }
	 iv_ruleAssignList=ruleAssignList 
	 { $current=$iv_ruleAssignList.current; } 
	 EOF 
;

// Rule AssignList
ruleAssignList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignListAccess().getAssignsAssignParserRuleCall_0_0()); 
	    }
		lv_assigns_0_0=ruleAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignListRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_0_0, 
        		"Assign");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssignListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignListAccess().getAssignsAssignParserRuleCall_1_1_0()); 
	    }
		lv_assigns_2_0=ruleAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignListRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_2_0, 
        		"Assign");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleCompositionHeader
entryRuleCompositionHeader returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositionHeaderRule()); }
	 iv_ruleCompositionHeader=ruleCompositionHeader 
	 { $current=$iv_ruleCompositionHeader.current; } 
	 EOF 
;

// Rule CompositionHeader
ruleCompositionHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'HEADER' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getCompositionHeaderAccess().getNameHEADERKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompositionHeaderRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "HEADER");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositionHeaderAccess().getAssignsAssignParserRuleCall_1_0()); 
	    }
		lv_assigns_1_0=ruleAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositionHeaderRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_1_0, 
        		"Assign");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCompositionHeaderAccess().getENDKeyword_2());
    }
))
;





// Entry rule entryRuleInstanceID
entryRuleInstanceID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceIDRule()); }
	 iv_ruleInstanceID=ruleInstanceID 
	 { $current=$iv_ruleInstanceID.current; } 
	 EOF 
;

// Rule InstanceID
ruleInstanceID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstanceIDAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceIDAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceIDRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstanceIDAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleInstanceOptions
entryRuleInstanceOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceOptionsRule()); }
	 iv_ruleInstanceOptions=ruleInstanceOptions 
	 { $current=$iv_ruleInstanceOptions.current; } 
	 EOF 
;

// Rule InstanceOptions
ruleInstanceOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstanceOptionsAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceOptionsAccess().getIn_opsInstanceOptionParserRuleCall_1_0()); 
	    }
		lv_in_ops_1_0=ruleInstanceOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceOptionsRule());
	        }
       		add(
       			$current, 
       			"in_ops",
        		lv_in_ops_1_0, 
        		"InstanceOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstanceOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceOptionsAccess().getIn_opsInstanceOptionParserRuleCall_2_1_0()); 
	    }
		lv_in_ops_3_0=ruleInstanceOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceOptionsRule());
	        }
       		add(
       			$current, 
       			"in_ops",
        		lv_in_ops_3_0, 
        		"InstanceOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleInstanceOption
entryRuleInstanceOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceOptionRule()); }
	 iv_ruleInstanceOption=ruleInstanceOption 
	 { $current=$iv_ruleInstanceOption.current; } 
	 EOF 
;

// Rule InstanceOption
ruleInstanceOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='LABEL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstanceOptionAccess().getLABELKeyword_0_0());
    }

    |	otherlv_1='VERSION' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstanceOptionAccess().getVERSIONKeyword_0_1());
    }
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstanceOptionAccess().getLeftParenthesisKeyword_1());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInstanceOptionAccess().getValueListParserRuleCall_2()); 
    }
    this_ValueList_3=ruleValueList
    { 
        $current = $this_ValueList_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstanceOptionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleContractInstance
entryRuleContractInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContractInstanceRule()); }
	 iv_ruleContractInstance=ruleContractInstance 
	 { $current=$iv_ruleContractInstance.current; } 
	 EOF 
;

// Rule ContractInstance
ruleContractInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sec_name_0_0=	'INSTANCE' 
    {
        newLeafNode(lv_sec_name_0_0, grammarAccess.getContractInstanceAccess().getSec_nameINSTANCEKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContractInstanceRule());
	        }
       		setWithLastConsumed($current, "sec_name", lv_sec_name_0_0, "INSTANCE");
	    }

)
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getContractInstanceAccess().getTOKENParserRuleCall_1()); 
    }
ruleTOKEN
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContractInstanceAccess().getInstIdInstanceIDParserRuleCall_2_0()); 
	    }
		lv_instId_2_0=ruleInstanceID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContractInstanceRule());
	        }
       		set(
       			$current, 
       			"instId",
        		lv_instId_2_0, 
        		"InstanceID");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getContractInstanceAccess().getInstance_opsInstanceOptionsParserRuleCall_3_0()); 
	    }
		lv_instance_ops_3_0=ruleInstanceOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContractInstanceRule());
	        }
       		set(
       			$current, 
       			"instance_ops",
        		lv_instance_ops_3_0, 
        		"InstanceOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getContractInstanceAccess().getAssignsAssignParserRuleCall_4_0()); 
	    }
		lv_assigns_4_0=ruleAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContractInstanceRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_4_0, 
        		"Assign");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='END' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getContractInstanceAccess().getENDKeyword_5());
    }
)
;





// Entry rule entryRuleFieldDecl
entryRuleFieldDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldDeclRule()); }
	 iv_ruleFieldDecl=ruleFieldDecl 
	 { $current=$iv_ruleFieldDecl.current; } 
	 EOF 
;

// Rule FieldDecl
ruleFieldDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='FIELD' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFieldDeclAccess().getFIELDKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldDeclAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldDeclRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldDeclAccess().getInput_opsInputOptionsParserRuleCall_2_0()); 
	    }
		lv_input_ops_2_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldDeclRule());
	        }
       		set(
       			$current, 
       			"input_ops",
        		lv_input_ops_2_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldDeclAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleKelAttrDecl
entryRuleKelAttrDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKelAttrDeclRule()); }
	 iv_ruleKelAttrDecl=ruleKelAttrDecl 
	 { $current=$iv_ruleKelAttrDecl.current; } 
	 EOF 
;

// Rule KelAttrDecl
ruleKelAttrDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ATTRIBUTE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKelAttrDeclAccess().getATTRIBUTEKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKelAttrDeclAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKelAttrDeclRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getKelAttrDeclAccess().getInput_opsInputOptionsParserRuleCall_2_0()); 
	    }
		lv_input_ops_2_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKelAttrDeclRule());
	        }
       		set(
       			$current, 
       			"input_ops",
        		lv_input_ops_2_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKelAttrDeclAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleKelEntityDeclSimple
entryRuleKelEntityDeclSimple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKelEntityDeclSimpleRule()); }
	 iv_ruleKelEntityDeclSimple=ruleKelEntityDeclSimple 
	 { $current=$iv_ruleKelEntityDeclSimple.current; } 
	 EOF 
;

// Rule KelEntityDeclSimple
ruleKelEntityDeclSimple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ENTITY' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKelEntityDeclSimpleAccess().getENTITYKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKelEntityDeclSimpleAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKelEntityDeclSimpleRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getKelEntityDeclSimpleAccess().getInput_opsInputOptionsParserRuleCall_2_0()); 
	    }
		lv_input_ops_2_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKelEntityDeclSimpleRule());
	        }
       		set(
       			$current, 
       			"input_ops",
        		lv_input_ops_2_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKelEntityDeclSimpleAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleKelEntityDecl
entryRuleKelEntityDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKelEntityDeclRule()); }
	 iv_ruleKelEntityDecl=ruleKelEntityDecl 
	 { $current=$iv_ruleKelEntityDecl.current; } 
	 EOF 
;

// Rule KelEntityDecl
ruleKelEntityDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ENTITY' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKelEntityDeclAccess().getENTITYKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKelEntityDeclAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKelEntityDeclRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getKelEntityDeclAccess().getInput_opsInputOptionsParserRuleCall_2_0()); 
	    }
		lv_input_ops_2_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKelEntityDeclRule());
	        }
       		set(
       			$current, 
       			"input_ops",
        		lv_input_ops_2_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getKelEntityDeclAccess().getAttrdeclKelAttrDeclParserRuleCall_3_0()); 
	    }
		lv_attrdecl_3_0=ruleKelAttrDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKelEntityDeclRule());
	        }
       		set(
       			$current, 
       			"attrdecl",
        		lv_attrdecl_3_0, 
        		"KelAttrDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)?((	'END' 
)=>	otherlv_4='END' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getKelEntityDeclAccess().getENDKeyword_4());
    }
))
;





// Entry rule entryRuleEnumEntry
entryRuleEnumEntry returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumEntryRule()); }
	 iv_ruleEnumEntry=ruleEnumEntry 
	 { $current=$iv_ruleEnumEntry.current; } 
	 EOF 
;

// Rule EnumEntry
ruleEnumEntry returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumEntryAccess().getVal_lValueParserRuleCall_0_0()); 
	    }
		lv_val_l_0_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumEntryRule());
	        }
       		set(
       			$current, 
       			"val_l",
        		lv_val_l_0_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumEntryAccess().getEqualsSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumEntryAccess().getVal_rValueParserRuleCall_1_1_0()); 
	    }
		lv_val_r_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumEntryRule());
	        }
       		set(
       			$current, 
       			"val_r",
        		lv_val_r_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleEnumList
entryRuleEnumList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumListRule()); }
	 iv_ruleEnumList=ruleEnumList 
	 { $current=$iv_ruleEnumList.current; } 
	 EOF 
;

// Rule EnumList
ruleEnumList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumListAccess().getEn_entsEnumEntryParserRuleCall_0_0()); 
	    }
		lv_en_ents_0_0=ruleEnumEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumListRule());
	        }
       		add(
       			$current, 
       			"en_ents",
        		lv_en_ents_0_0, 
        		"EnumEntry");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumListAccess().getEn_entsEnumEntryParserRuleCall_1_1_0()); 
	    }
		lv_en_ents_2_0=ruleEnumEntry		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumListRule());
	        }
       		add(
       			$current, 
       			"en_ents",
        		lv_en_ents_2_0, 
        		"EnumEntry");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleEnumDecl
entryRuleEnumDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumDeclRule()); }
	 iv_ruleEnumDecl=ruleEnumDecl 
	 { $current=$iv_ruleEnumDecl.current; } 
	 EOF 
;

// Rule EnumDecl
ruleEnumDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_enum_dec_0_0=	'ENUM' 
    {
        newLeafNode(lv_enum_dec_0_0, grammarAccess.getEnumDeclAccess().getEnum_decENUMKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumDeclRule());
	        }
       		setWithLastConsumed($current, "enum_dec", lv_enum_dec_0_0, "ENUM");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumDeclAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumDeclAccess().getEnum_listEnumListParserRuleCall_2_0()); 
	    }
		lv_enum_list_2_0=ruleEnumList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumDeclRule());
	        }
       		set(
       			$current, 
       			"enum_list",
        		lv_enum_list_2_0, 
        		"EnumList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumDeclAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleInputSection
entryRuleInputSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputSectionRule()); }
	 iv_ruleInputSection=ruleInputSection 
	 { $current=$iv_ruleInputSection.current; } 
	 EOF 
;

// Rule InputSection
ruleInputSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'INPUTS' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getInputSectionAccess().getNameINPUTSKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputSectionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "INPUTS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInputSectionAccess().getInputsInputValueParserRuleCall_1_0()); 
	    }
		lv_inputs_1_0=ruleInputValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputSectionRule());
	        }
       		add(
       			$current, 
       			"inputs",
        		lv_inputs_1_0, 
        		"InputValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInputSectionAccess().getENDKeyword_2());
    }
))
;





// Entry rule entryRuleBool
entryRuleBool returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolRule()); }
	 iv_ruleBool=ruleBool 
	 { $current=$iv_ruleBool.current; } 
	 EOF 
;

// Rule Bool
ruleBool returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BOOL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoolAccess().getBOOLKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntVar
entryRuleIntVar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntVarRule()); }
	 iv_ruleIntVar=ruleIntVar 
	 { $current=$iv_ruleIntVar.current; } 
	 EOF 
;

// Rule IntVar
ruleIntVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='INT' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntVarAccess().getINTKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntVarAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntVarRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStringVar
entryRuleStringVar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringVarRule()); }
	 iv_ruleStringVar=ruleStringVar 
	 { $current=$iv_ruleStringVar.current; } 
	 EOF 
;

// Rule StringVar
ruleStringVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='STRING' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringVarAccess().getSTRINGKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringVarAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringVarRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDataset
entryRuleDataset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatasetRule()); }
	 iv_ruleDataset=ruleDataset 
	 { $current=$iv_ruleDataset.current; } 
	 EOF 
;

// Rule Dataset
ruleDataset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DATASET' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDatasetAccess().getDATASETKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatasetAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatasetRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	 iv_ruleGroup=ruleGroup 
	 { $current=$iv_ruleGroup.current; } 
	 EOF 
;

// Rule Group
ruleGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='GROUP' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGROUPKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleReal
entryRuleReal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealRule()); }
	 iv_ruleReal=ruleReal 
	 { $current=$iv_ruleReal.current; } 
	 EOF 
;

// Rule Real
ruleReal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='REAL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRealAccess().getREALKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRealAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInputSimpleTypes
entryRuleInputSimpleTypes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputSimpleTypesRule()); }
	 iv_ruleInputSimpleTypes=ruleInputSimpleTypes 
	 { $current=$iv_ruleInputSimpleTypes.current; } 
	 EOF 
;

// Rule InputSimpleTypes
ruleInputSimpleTypes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputSimpleTypesAccess().getBoolParserRuleCall_0()); 
    }
    this_Bool_0=ruleBool
    { 
        $current = $this_Bool_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputSimpleTypesAccess().getIntVarParserRuleCall_1()); 
    }
    this_IntVar_1=ruleIntVar
    { 
        $current = $this_IntVar_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputSimpleTypesAccess().getEnumDeclParserRuleCall_2()); 
    }
    this_EnumDecl_2=ruleEnumDecl
    { 
        $current = $this_EnumDecl_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputSimpleTypesAccess().getStringVarParserRuleCall_3()); 
    }
    this_StringVar_3=ruleStringVar
    { 
        $current = $this_StringVar_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputSimpleTypesAccess().getRealParserRuleCall_4()); 
    }
    this_Real_4=ruleReal
    { 
        $current = $this_Real_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRecord
entryRuleRecord returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRecordRule()); }
	 iv_ruleRecord=ruleRecord 
	 { $current=$iv_ruleRecord.current; } 
	 EOF 
;

// Rule Record
ruleRecord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Record' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRecordAccess().getRecordKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleKelBase
entryRuleKelBase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKelBaseRule()); }
	 iv_ruleKelBase=ruleKelBase 
	 { $current=$iv_ruleKelBase.current; } 
	 EOF 
;

// Rule KelBase
ruleKelBase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='KELBASE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKelBaseAccess().getKELBASEKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKelBaseAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKelBaseRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleInputValue
entryRuleInputValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputValueRule()); }
	 iv_ruleInputValue=ruleInputValue 
	 { $current=$iv_ruleInputValue.current; } 
	 EOF 
;

// Rule InputValue
ruleInputValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getInputSimpleTypesParserRuleCall_0_0_0()); 
    }
    this_InputSimpleTypes_0=ruleInputSimpleTypes
    { 
        $current = $this_InputSimpleTypes_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getRecordParserRuleCall_0_0_1()); 
    }
    this_Record_1=ruleRecord
    { 
        $current = $this_Record_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getDatasetParserRuleCall_0_0_2()); 
    }
    this_Dataset_2=ruleDataset
    { 
        $current = $this_Dataset_2.current; 
        afterParserOrEnumRuleCall();
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getInput_op_listInputOptionsParserRuleCall_0_1_0()); 
	    }
		lv_input_op_list_3_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		set(
       			$current, 
       			"input_op_list",
        		lv_input_op_list_3_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInputValueAccess().getSemicolonKeyword_0_2());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getDatasetParserRuleCall_1_0()); 
    }
    this_Dataset_5=ruleDataset
    { 
        $current = $this_Dataset_5.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getInput_op_listInputOptionsParserRuleCall_1_1_0()); 
	    }
		lv_input_op_list_6_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		set(
       			$current, 
       			"input_op_list",
        		lv_input_op_list_6_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getFieldsFieldDeclParserRuleCall_1_2_0()); 
	    }
		lv_fields_7_0=ruleFieldDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_7_0, 
        		"FieldDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_8='END' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInputValueAccess().getENDKeyword_1_3());
    }
))
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getKelBaseParserRuleCall_2_0()); 
    }
    this_KelBase_9=ruleKelBase
    { 
        $current = $this_KelBase_9.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getInput_op_listInputOptionsParserRuleCall_2_1_0()); 
	    }
		lv_input_op_list_10_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		set(
       			$current, 
       			"input_op_list",
        		lv_input_op_list_10_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getKel_opsKelEntityDeclParserRuleCall_2_2_0_0()); 
	    }
		lv_kel_ops_11_0=ruleKelEntityDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		add(
       			$current, 
       			"kel_ops",
        		lv_kel_ops_11_0, 
        		"KelEntityDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getKel_opsKelEntityDeclSimpleParserRuleCall_2_2_1_0()); 
	    }
		lv_kel_ops_12_0=ruleKelEntityDeclSimple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		add(
       			$current, 
       			"kel_ops",
        		lv_kel_ops_12_0, 
        		"KelEntityDeclSimple");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getKel_opsKelAttrDeclParserRuleCall_2_2_2_0()); 
	    }
		lv_kel_ops_13_0=ruleKelAttrDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		add(
       			$current, 
       			"kel_ops",
        		lv_kel_ops_13_0, 
        		"KelAttrDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInputValueAccess().getGroupParserRuleCall_3_0()); 
    }
    this_Group_14=ruleGroup
    { 
        $current = $this_Group_14.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getInput_op_listInputOptionsParserRuleCall_3_1_0()); 
	    }
		lv_input_op_list_15_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		set(
       			$current, 
       			"input_op_list",
        		lv_input_op_list_15_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInputValueAccess().getValsInputValueParserRuleCall_3_2_0()); 
	    }
		lv_vals_16_0=ruleInputValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputValueRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_16_0, 
        		"InputValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_17='END' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getInputValueAccess().getENDKeyword_3_3());
    }
)))
;





// Entry rule entryRuleInputOptions
entryRuleInputOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputOptionsRule()); }
	 iv_ruleInputOptions=ruleInputOptions 
	 { $current=$iv_ruleInputOptions.current; } 
	 EOF 
;

// Rule InputOptions
ruleInputOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInputOptionsAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionsAccess().getInput_opsInputOptionParserRuleCall_1_0()); 
	    }
		lv_input_ops_1_0=ruleInputOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionsRule());
	        }
       		add(
       			$current, 
       			"input_ops",
        		lv_input_ops_1_0, 
        		"InputOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInputOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionsAccess().getInput_opsInputOptionParserRuleCall_2_1_0()); 
	    }
		lv_input_ops_3_0=ruleInputOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionsRule());
	        }
       		add(
       			$current, 
       			"input_ops",
        		lv_input_ops_3_0, 
        		"InputOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleInputOption
entryRuleInputOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputOptionRule()); }
	 iv_ruleInputOption=ruleInputOption 
	 { $current=$iv_ruleInputOption.current; } 
	 EOF 
;

// Rule InputOption
ruleInputOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_atr_0_0=	'OPTIONAL' 
    {
        newLeafNode(lv_atr_0_0, grammarAccess.getInputOptionAccess().getAtrOPTIONALKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_0_0, "OPTIONAL");
	    }

)
)
    |(
(
		lv_atr_1_0=	'DEFINED' 
    {
        newLeafNode(lv_atr_1_0, grammarAccess.getInputOptionAccess().getAtrDEFINEDKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_1_0, "DEFINED");
	    }

)
)
    |(
(
		lv_atr_2_0=	'DISABLED' 
    {
        newLeafNode(lv_atr_2_0, grammarAccess.getInputOptionAccess().getAtrDISABLEDKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_2_0, "DISABLED");
	    }

)
)
    |(
(
		lv_atr_3_0=	'MAPBYTYPE' 
    {
        newLeafNode(lv_atr_3_0, grammarAccess.getInputOptionAccess().getAtrMAPBYTYPEKeyword_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_3_0, "MAPBYTYPE");
	    }

)
)
    |(
(
		lv_atr_4_0=	'MAPBYNAME' 
    {
        newLeafNode(lv_atr_4_0, grammarAccess.getInputOptionAccess().getAtrMAPBYNAMEKeyword_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_4_0, "MAPBYNAME");
	    }

)
)
    |(
(
		lv_atr_5_0=	'MANY' 
    {
        newLeafNode(lv_atr_5_0, grammarAccess.getInputOptionAccess().getAtrMANYKeyword_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_5_0, "MANY");
	    }

)
))
    |((
(
		lv_form_6_0=	'FORMFIELD' 
    {
        newLeafNode(lv_form_6_0, grammarAccess.getInputOptionAccess().getFormFORMFIELDKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "form", lv_form_6_0, "FORMFIELD");
	    }

)
)	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInputOptionAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionAccess().getForm_opFormfieldOptionParserRuleCall_1_2_0()); 
	    }
		lv_form_op_8_0=ruleFormfieldOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionRule());
	        }
       		set(
       			$current, 
       			"form_op",
        		lv_form_op_8_0, 
        		"FormfieldOption");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInputOptionAccess().getRightParenthesisKeyword_1_3());
    }
)
    |((
(
		lv_enab_10_0=	'ENABLE' 
    {
        newLeafNode(lv_enab_10_0, grammarAccess.getInputOptionAccess().getEnabENABLEKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "enab", lv_enab_10_0, "ENABLE");
	    }

)
)	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInputOptionAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionAccess().getAssigns_listAssignListParserRuleCall_2_2_0()); 
	    }
		lv_assigns_list_12_0=ruleAssignList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionRule());
	        }
       		set(
       			$current, 
       			"assigns_list",
        		lv_assigns_list_12_0, 
        		"AssignList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInputOptionAccess().getRightParenthesisKeyword_2_3());
    }
)
    |((
(
		lv_type_14_0=	'TYPE' 
    {
        newLeafNode(lv_type_14_0, grammarAccess.getInputOptionAccess().getTypeTYPEKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_14_0, "TYPE");
	    }

)
)	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInputOptionAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionAccess().getType_opInputtypeOptionsParserRuleCall_3_2_0()); 
	    }
		lv_type_op_16_0=ruleInputtypeOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionRule());
	        }
       		set(
       			$current, 
       			"type_op",
        		lv_type_op_16_0, 
        		"InputtypeOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getInputOptionAccess().getRightParenthesisKeyword_3_3());
    }
)
    |(((
(
		lv_atr_18_0=	'RANGE' 
    {
        newLeafNode(lv_atr_18_0, grammarAccess.getInputOptionAccess().getAtrRANGEKeyword_4_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_18_0, "RANGE");
	    }

)
)
    |(
(
		lv_atr_19_0=	'DEFAULT' 
    {
        newLeafNode(lv_atr_19_0, grammarAccess.getInputOptionAccess().getAtrDEFAULTKeyword_4_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_19_0, "DEFAULT");
	    }

)
)
    |(
(
		lv_atr_20_0=	'MAXLENGTH' 
    {
        newLeafNode(lv_atr_20_0, grammarAccess.getInputOptionAccess().getAtrMAXLENGTHKeyword_4_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_20_0, "MAXLENGTH");
	    }

)
)
    |(
(
		lv_atr_21_0=	'DISABLED' 
    {
        newLeafNode(lv_atr_21_0, grammarAccess.getInputOptionAccess().getAtrDISABLEDKeyword_4_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_21_0, "DISABLED");
	    }

)
)
    |(
(
		lv_atr_22_0=	'DESCRIPTION' 
    {
        newLeafNode(lv_atr_22_0, grammarAccess.getInputOptionAccess().getAtrDESCRIPTIONKeyword_4_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_22_0, "DESCRIPTION");
	    }

)
)
    |(
(
		lv_atr_23_0=	'NULL' 
    {
        newLeafNode(lv_atr_23_0, grammarAccess.getInputOptionAccess().getAtrNULLKeyword_4_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_23_0, "NULL");
	    }

)
)
    |(
(
		lv_atr_24_0=	'FIELDLENGTH' 
    {
        newLeafNode(lv_atr_24_0, grammarAccess.getInputOptionAccess().getAtrFIELDLENGTHKeyword_4_0_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_24_0, "FIELDLENGTH");
	    }

)
)
    |(
(
		lv_atr_25_0=	'ROWS' 
    {
        newLeafNode(lv_atr_25_0, grammarAccess.getInputOptionAccess().getAtrROWSKeyword_4_0_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_25_0, "ROWS");
	    }

)
)
    |(
(
		lv_atr_26_0=	'COLS' 
    {
        newLeafNode(lv_atr_26_0, grammarAccess.getInputOptionAccess().getAtrCOLSKeyword_4_0_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_26_0, "COLS");
	    }

)
)
    |(
(
		lv_atr_27_0=	'_HTML_STYLECLASS' 
    {
        newLeafNode(lv_atr_27_0, grammarAccess.getInputOptionAccess().getAtr_HTML_STYLECLASSKeyword_4_0_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_27_0, "_HTML_STYLECLASS");
	    }

)
)
    |(
(
		lv_atr_28_0=	'LABEL' 
    {
        newLeafNode(lv_atr_28_0, grammarAccess.getInputOptionAccess().getAtrLABELKeyword_4_0_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_28_0, "LABEL");
	    }

)
))	otherlv_29='(' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getInputOptionAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputOptionAccess().getValsValueListParserRuleCall_4_2_0()); 
	    }
		lv_vals_30_0=ruleValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputOptionRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_30_0, 
        		"ValueList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_31=')' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getInputOptionAccess().getRightParenthesisKeyword_4_3());
    }
))
;





// Entry rule entryRuleFormfieldOption
entryRuleFormfieldOption returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormfieldOptionRule()); } 
	 iv_ruleFormfieldOption=ruleFormfieldOption 
	 { $current=$iv_ruleFormfieldOption.current.getText(); }  
	 EOF 
;

// Rule FormfieldOption
ruleFormfieldOption returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='CHECKBOX' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getCHECKBOXKeyword_0()); 
    }

    |
	kw='RADIO' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getRADIOKeyword_1()); 
    }

    |
	kw='SELECT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getSELECTKeyword_2()); 
    }

    |
	kw='MULTIPLESELECT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getMULTIPLESELECTKeyword_3()); 
    }

    |
	kw='TEXTAREA' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getTEXTAREAKeyword_4()); 
    }

    |
	kw='HIDDEN' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getHIDDENKeyword_5()); 
    }

    |
	kw='TEXT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFormfieldOptionAccess().getTEXTKeyword_6()); 
    }
)
    ;





// Entry rule entryRuleInputtypeOption
entryRuleInputtypeOption returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputtypeOptionRule()); } 
	 iv_ruleInputtypeOption=ruleInputtypeOption 
	 { $current=$iv_ruleInputtypeOption.current.getText(); }  
	 EOF 
;

// Rule InputtypeOption
ruleInputtypeOption returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='STRING' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getSTRINGKeyword_0()); 
    }

    |
	kw='UNICODE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getUNICODEKeyword_1()); 
    }

    |
	kw='UNISTR' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getUNISTRKeyword_2()); 
    }

    |
	kw='INTEGER' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getINTEGERKeyword_3()); 
    }

    |
	kw='DECIMAL' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getDECIMALKeyword_4()); 
    }

    |
	kw='NUMERIC' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getNUMERICKeyword_5()); 
    }

    |
	kw='REAL' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInputtypeOptionAccess().getREALKeyword_6()); 
    }
)
    ;





// Entry rule entryRuleInputtypeOptions
entryRuleInputtypeOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputtypeOptionsRule()); }
	 iv_ruleInputtypeOptions=ruleInputtypeOptions 
	 { $current=$iv_ruleInputtypeOptions.current; } 
	 EOF 
;

// Rule InputtypeOptions
ruleInputtypeOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInputtypeOptionsAccess().getIn_type_opInputtypeOptionParserRuleCall_0_0()); 
	    }
		lv_in_type_op_0_0=ruleInputtypeOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputtypeOptionsRule());
	        }
       		add(
       			$current, 
       			"in_type_op",
        		lv_in_type_op_0_0, 
        		"InputtypeOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputtypeOptionsAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputtypeOptionsAccess().getIn_type_opInputtypeOptionParserRuleCall_1_1_0()); 
	    }
		lv_in_type_op_2_0=ruleInputtypeOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputtypeOptionsRule());
	        }
       		add(
       			$current, 
       			"in_type_op",
        		lv_in_type_op_2_0, 
        		"InputtypeOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleIntegrateSection
entryRuleIntegrateSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegrateSectionRule()); }
	 iv_ruleIntegrateSection=ruleIntegrateSection 
	 { $current=$iv_ruleIntegrateSection.current; } 
	 EOF 
;

// Rule IntegrateSection
ruleIntegrateSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'INTEGRATE' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getIntegrateSectionAccess().getNameINTEGRATEKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegrateSectionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "INTEGRATE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegrateSectionAccess().getOutputsOutputValueParserRuleCall_1_0()); 
	    }
		lv_outputs_1_0=ruleOutputValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegrateSectionRule());
	        }
       		add(
       			$current, 
       			"outputs",
        		lv_outputs_1_0, 
        		"OutputValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntegrateSectionAccess().getENDKeyword_2());
    }
))
;





// Entry rule entryRuleOutputSection
entryRuleOutputSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputSectionRule()); }
	 iv_ruleOutputSection=ruleOutputSection 
	 { $current=$iv_ruleOutputSection.current; } 
	 EOF 
;

// Rule OutputSection
ruleOutputSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'OUTPUTS' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getOutputSectionAccess().getNameOUTPUTSKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputSectionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "OUTPUTS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputSectionAccess().getOutputsOutputValueParserRuleCall_1_0()); 
	    }
		lv_outputs_1_0=ruleOutputValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputSectionRule());
	        }
       		add(
       			$current, 
       			"outputs",
        		lv_outputs_1_0, 
        		"OutputValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutputSectionAccess().getENDKeyword_2());
    }
))
;







// Entry rule entryRuleECLInteger
entryRuleECLInteger returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLIntegerRule()); }
	 iv_ruleECLInteger=ruleECLInteger 
	 { $current=$iv_ruleECLInteger.current; } 
	 EOF 
;

// Rule ECLInteger
ruleECLInteger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='INTEGER' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLIntegerAccess().getINTEGERKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLIntegerAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getECLIntegerAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLIntegerRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLUnsigned
entryRuleECLUnsigned returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLUnsignedRule()); }
	 iv_ruleECLUnsigned=ruleECLUnsigned 
	 { $current=$iv_ruleECLUnsigned.current; } 
	 EOF 
;

// Rule ECLUnsigned
ruleECLUnsigned returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UNSIGNED' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLUnsignedAccess().getUNSIGNEDKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLUnsignedAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getECLUnsignedAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLUnsignedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLString
entryRuleECLString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLStringRule()); }
	 iv_ruleECLString=ruleECLString 
	 { $current=$iv_ruleECLString.current; } 
	 EOF 
;

// Rule ECLString
ruleECLString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='STRING' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLStringAccess().getSTRINGKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLStringAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getECLStringAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLStringRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLQstring
entryRuleECLQstring returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLQstringRule()); }
	 iv_ruleECLQstring=ruleECLQstring 
	 { $current=$iv_ruleECLQstring.current; } 
	 EOF 
;

// Rule ECLQstring
ruleECLQstring returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='QSTRING' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLQstringAccess().getQSTRINGKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLQstringAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getECLQstringAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLQstringRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLVarstring
entryRuleECLVarstring returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLVarstringRule()); }
	 iv_ruleECLVarstring=ruleECLVarstring 
	 { $current=$iv_ruleECLVarstring.current; } 
	 EOF 
;

// Rule ECLVarstring
ruleECLVarstring returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='VARSTRING' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLVarstringAccess().getVARSTRINGKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLVarstringAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getECLVarstringAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLVarstringRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLUnicode
entryRuleECLUnicode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLUnicodeRule()); }
	 iv_ruleECLUnicode=ruleECLUnicode 
	 { $current=$iv_ruleECLUnicode.current; } 
	 EOF 
;

// Rule ECLUnicode
ruleECLUnicode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UNICODE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLUnicodeAccess().getUNICODEKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLUnicodeAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getECLUnicodeAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLUnicodeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLVarunicode
entryRuleECLVarunicode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLVarunicodeRule()); }
	 iv_ruleECLVarunicode=ruleECLVarunicode 
	 { $current=$iv_ruleECLVarunicode.current; } 
	 EOF 
;

// Rule ECLVarunicode
ruleECLVarunicode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='VARUNICODE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLVarunicodeAccess().getVARUNICODEKeyword_0());
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLVarunicodeAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getECLVarunicodeAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLVarunicodeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLData
entryRuleECLData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLDataRule()); }
	 iv_ruleECLData=ruleECLData 
	 { $current=$iv_ruleECLData.current; } 
	 EOF 
;

// Rule ECLData
ruleECLData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DATA' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLDataAccess().getDATAKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getECLDataAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLDataRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLReal
entryRuleECLReal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLRealRule()); }
	 iv_ruleECLReal=ruleECLReal 
	 { $current=$iv_ruleECLReal.current; } 
	 EOF 
;

// Rule ECLReal
ruleECLReal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='REAL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLRealAccess().getREALKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getECLRealAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLRealRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLBoolean
entryRuleECLBoolean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLBooleanRule()); }
	 iv_ruleECLBoolean=ruleECLBoolean 
	 { $current=$iv_ruleECLBoolean.current; } 
	 EOF 
;

// Rule ECLBoolean
ruleECLBoolean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BOOL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getECLBooleanAccess().getBOOLKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getECLBooleanAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLBooleanRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLNumType
entryRuleECLNumType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLNumTypeRule()); }
	 iv_ruleECLNumType=ruleECLNumType 
	 { $current=$iv_ruleECLNumType.current; } 
	 EOF 
;

// Rule ECLNumType
ruleECLNumType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_ECLNUMBEREDTYPE_0=RULE_ECLNUMBEREDTYPE
    { 
    newLeafNode(this_ECLNUMBEREDTYPE_0, grammarAccess.getECLNumTypeAccess().getECLNUMBEREDTYPETerminalRuleCall_0()); 
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLNumTypeAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getECLNumTypeAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLNumTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLDecType
entryRuleECLDecType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLDecTypeRule()); }
	 iv_ruleECLDecType=ruleECLDecType 
	 { $current=$iv_ruleECLDecType.current; } 
	 EOF 
;

// Rule ECLDecType
ruleECLDecType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_ECLDECIMALTYPE_0=RULE_ECLDECIMALTYPE
    { 
    newLeafNode(this_ECLDECIMALTYPE_0, grammarAccess.getECLDecTypeAccess().getECLDECIMALTYPETerminalRuleCall_0()); 
    }
(this_INT_1=RULE_INT
    { 
    newLeafNode(this_INT_1, grammarAccess.getECLDecTypeAccess().getINTTerminalRuleCall_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getECLDecTypeAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLDecTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleECLfieldType
entryRuleECLfieldType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLfieldTypeRule()); }
	 iv_ruleECLfieldType=ruleECLfieldType 
	 { $current=$iv_ruleECLfieldType.current; } 
	 EOF 
;

// Rule ECLfieldType
ruleECLfieldType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLIntegerParserRuleCall_0()); 
    }
    this_ECLInteger_0=ruleECLInteger
    { 
        $current = $this_ECLInteger_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLQstringParserRuleCall_1()); 
    }
    this_ECLQstring_1=ruleECLQstring
    { 
        $current = $this_ECLQstring_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLStringParserRuleCall_2()); 
    }
    this_ECLString_2=ruleECLString
    { 
        $current = $this_ECLString_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLRealParserRuleCall_3()); 
    }
    this_ECLReal_3=ruleECLReal
    { 
        $current = $this_ECLReal_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLUnicodeParserRuleCall_4()); 
    }
    this_ECLUnicode_4=ruleECLUnicode
    { 
        $current = $this_ECLUnicode_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLDataParserRuleCall_5()); 
    }
    this_ECLData_5=ruleECLData
    { 
        $current = $this_ECLData_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLVarstringParserRuleCall_6()); 
    }
    this_ECLVarstring_6=ruleECLVarstring
    { 
        $current = $this_ECLVarstring_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLVarunicodeParserRuleCall_7()); 
    }
    this_ECLVarunicode_7=ruleECLVarunicode
    { 
        $current = $this_ECLVarunicode_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLUnsignedParserRuleCall_8()); 
    }
    this_ECLUnsigned_8=ruleECLUnsigned
    { 
        $current = $this_ECLUnsigned_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLNumTypeParserRuleCall_9()); 
    }
    this_ECLNumType_9=ruleECLNumType
    { 
        $current = $this_ECLNumType_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLDecTypeParserRuleCall_10()); 
    }
    this_ECLDecType_10=ruleECLDecType
    { 
        $current = $this_ECLDecType_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLfieldTypeAccess().getECLBooleanParserRuleCall_11()); 
    }
    this_ECLBoolean_11=ruleECLBoolean
    { 
        $current = $this_ECLBoolean_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleECLOutputDecl
entryRuleECLOutputDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getECLOutputDeclRule()); }
	 iv_ruleECLOutputDecl=ruleECLOutputDecl 
	 { $current=$iv_ruleECLOutputDecl.current; } 
	 EOF 
;

// Rule ECLOutputDecl
ruleECLOutputDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLOutputDeclAccess().getECLfieldTypeParserRuleCall_0_0()); 
    }
    this_ECLfieldType_0=ruleECLfieldType
    { 
        $current = $this_ECLfieldType_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getECLOutputDeclAccess().getOptionsOutputOptionsParserRuleCall_0_1_0()); 
	    }
		lv_options_1_0=ruleOutputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getECLOutputDeclRule());
	        }
       		set(
       			$current, 
       			"options",
        		lv_options_1_0, 
        		"OutputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getECLOutputDeclAccess().getSemicolonKeyword_0_2());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getECLOutputDeclAccess().getNestedDatasetDeclParserRuleCall_1()); 
    }
    this_NestedDatasetDecl_3=ruleNestedDatasetDecl
    { 
        $current = $this_NestedDatasetDecl_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleServiceInputValue
entryRuleServiceInputValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceInputValueRule()); }
	 iv_ruleServiceInputValue=ruleServiceInputValue 
	 { $current=$iv_ruleServiceInputValue.current; } 
	 EOF 
;

// Rule ServiceInputValue
ruleServiceInputValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceInputValueAccess().getECLfieldTypeParserRuleCall_0_0()); 
    }
    this_ECLfieldType_0=ruleECLfieldType
    { 
        $current = $this_ECLfieldType_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceInputValueAccess().getIn_opsInputOptionsParserRuleCall_0_1_0()); 
	    }
		lv_in_ops_1_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceInputValueRule());
	        }
       		set(
       			$current, 
       			"in_ops",
        		lv_in_ops_1_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getServiceInputValueAccess().getSemicolonKeyword_0_2());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getServiceInputValueAccess().getNestedDatasetDeclParserRuleCall_1()); 
    }
    this_NestedDatasetDecl_3=ruleNestedDatasetDecl
    { 
        $current = $this_NestedDatasetDecl_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleServiceInputSection
entryRuleServiceInputSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceInputSectionRule()); }
	 iv_ruleServiceInputSection=ruleServiceInputSection 
	 { $current=$iv_ruleServiceInputSection.current; } 
	 EOF 
;

// Rule ServiceInputSection
ruleServiceInputSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='INPUTS' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getServiceInputSectionAccess().getINPUTSKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceInputSectionAccess().getServsServiceInputValueParserRuleCall_1_0()); 
	    }
		lv_servs_1_0=ruleServiceInputValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceInputSectionRule());
	        }
       		add(
       			$current, 
       			"servs",
        		lv_servs_1_0, 
        		"ServiceInputValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getServiceInputSectionAccess().getENDKeyword_2());
    }
))
;





// Entry rule entryRuleNestedDatasetDecl
entryRuleNestedDatasetDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedDatasetDeclRule()); }
	 iv_ruleNestedDatasetDecl=ruleNestedDatasetDecl 
	 { $current=$iv_ruleNestedDatasetDecl.current; } 
	 EOF 
;

// Rule NestedDatasetDecl
ruleNestedDatasetDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNestedDatasetDeclAccess().getOutDatasetParserRuleCall_0()); 
    }
    this_OutDataset_0=ruleOutDataset
    { 
        $current = $this_OutDataset_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedDatasetDeclAccess().getOptionsOutputOptionsParserRuleCall_1_0()); 
	    }
		lv_options_1_0=ruleOutputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedDatasetDeclRule());
	        }
       		set(
       			$current, 
       			"options",
        		lv_options_1_0, 
        		"OutputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedDatasetDeclAccess().getDeclECLOutputDeclParserRuleCall_2_0()); 
	    }
		lv_decl_2_0=ruleECLOutputDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedDatasetDeclRule());
	        }
       		add(
       			$current, 
       			"decl",
        		lv_decl_2_0, 
        		"ECLOutputDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_3='END' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNestedDatasetDeclAccess().getENDKeyword_3());
    }
))
;





// Entry rule entryRuleOutputOption
entryRuleOutputOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputOptionRule()); }
	 iv_ruleOutputOption=ruleOutputOption 
	 { $current=$iv_ruleOutputOption.current; } 
	 EOF 
;

// Rule OutputOption
ruleOutputOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_atr_0_0=	'SIDE' 
    {
        newLeafNode(lv_atr_0_0, grammarAccess.getOutputOptionAccess().getAtrSIDEKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_0_0, "SIDE");
	    }

)
)
    |(
(
		lv_atr_1_0=	'LARGE' 
    {
        newLeafNode(lv_atr_1_0, grammarAccess.getOutputOptionAccess().getAtrLARGEKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_1_0, "LARGE");
	    }

)
)
    |(
(
		lv_atr_2_0=	'SMALL' 
    {
        newLeafNode(lv_atr_2_0, grammarAccess.getOutputOptionAccess().getAtrSMALLKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_2_0, "SMALL");
	    }

)
)
    |(
(
		lv_atr_3_0=	'FEW' 
    {
        newLeafNode(lv_atr_3_0, grammarAccess.getOutputOptionAccess().getAtrFEWKeyword_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_3_0, "FEW");
	    }

)
)
    |(
(
		lv_atr_4_0=	'WUID' 
    {
        newLeafNode(lv_atr_4_0, grammarAccess.getOutputOptionAccess().getAtrWUIDKeyword_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_4_0, "WUID");
	    }

)
)
    |(
(
		lv_atr_5_0=	'APPEND' 
    {
        newLeafNode(lv_atr_5_0, grammarAccess.getOutputOptionAccess().getAtrAPPENDKeyword_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_5_0, "APPEND");
	    }

)
)
    |(
(
		lv_atr_6_0=	'SCOREDSEARCH' 
    {
        newLeafNode(lv_atr_6_0, grammarAccess.getOutputOptionAccess().getAtrSCOREDSEARCHKeyword_0_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_6_0, "SCOREDSEARCH");
	    }

)
)
    |(
(
		lv_atr_7_0=	'DATABOMB' 
    {
        newLeafNode(lv_atr_7_0, grammarAccess.getOutputOptionAccess().getAtrDATABOMBKeyword_0_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_7_0, "DATABOMB");
	    }

)
)
    |(
(
		lv_atr_8_0=	'OPTIONAL' 
    {
        newLeafNode(lv_atr_8_0, grammarAccess.getOutputOptionAccess().getAtrOPTIONALKeyword_0_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_8_0, "OPTIONAL");
	    }

)
))
    |((
(
(
		lv_atr_9_1=	'WUID' 
    {
        newLeafNode(lv_atr_9_1, grammarAccess.getOutputOptionAccess().getAtrWUIDKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_9_1, null);
	    }

    |		lv_atr_9_2=	'FROM' 
    {
        newLeafNode(lv_atr_9_2, grammarAccess.getOutputOptionAccess().getAtrFROMKeyword_1_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_9_2, null);
	    }

)

)
)	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOutputOptionAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionAccess().getNameTOKENParserRuleCall_1_2_0()); 
	    }
		lv_name_11_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_11_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getOutputOptionAccess().getRightParenthesisKeyword_1_3());
    }
)
    |((
(
		lv_atr_13_0=	'ENABLE' 
    {
        newLeafNode(lv_atr_13_0, grammarAccess.getOutputOptionAccess().getAtrENABLEKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_13_0, "ENABLE");
	    }

)
)	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getOutputOptionAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionAccess().getAssignsAssignListParserRuleCall_2_2_0()); 
	    }
		lv_assigns_15_0=ruleAssignList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionRule());
	        }
       		set(
       			$current, 
       			"assigns",
        		lv_assigns_15_0, 
        		"AssignList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_16=')' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getOutputOptionAccess().getRightParenthesisKeyword_2_3());
    }
)
    |((
(
		lv_atr_17_0=	'PREFIX' 
    {
        newLeafNode(lv_atr_17_0, grammarAccess.getOutputOptionAccess().getAtrPREFIXKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_17_0, "PREFIX");
	    }

)
)	otherlv_18='(' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getOutputOptionAccess().getLeftParenthesisKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionAccess().getNameTOKENParserRuleCall_3_2_0()); 
	    }
		lv_name_19_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_19_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_20=')' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getOutputOptionAccess().getRightParenthesisKeyword_3_3());
    }
)
    |((
(
(
		lv_atr_21_1=	'WUID' 
    {
        newLeafNode(lv_atr_21_1, grammarAccess.getOutputOptionAccess().getAtrWUIDKeyword_4_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_21_1, null);
	    }

    |		lv_atr_21_2=	'FILLS' 
    {
        newLeafNode(lv_atr_21_2, grammarAccess.getOutputOptionAccess().getAtrFILLSKeyword_4_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_21_2, null);
	    }

    |		lv_atr_21_3=	'SOAP' 
    {
        newLeafNode(lv_atr_21_3, grammarAccess.getOutputOptionAccess().getAtrSOAPKeyword_4_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_21_3, null);
	    }

)

)
)	otherlv_22='(' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getOutputOptionAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionAccess().getValsValueListParserRuleCall_4_2_0()); 
	    }
		lv_vals_23_0=ruleValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_23_0, 
        		"ValueList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24=')' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getOutputOptionAccess().getRightParenthesisKeyword_4_3());
    }
)
    |((
(
(
		lv_atr_25_1=	'DESCRIPTION' 
    {
        newLeafNode(lv_atr_25_1, grammarAccess.getOutputOptionAccess().getAtrDESCRIPTIONKeyword_5_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_25_1, null);
	    }

    |		lv_atr_25_2=	'SOAP' 
    {
        newLeafNode(lv_atr_25_2, grammarAccess.getOutputOptionAccess().getAtrSOAPKeyword_5_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_25_2, null);
	    }

    |		lv_atr_25_3=	'JSON' 
    {
        newLeafNode(lv_atr_25_3, grammarAccess.getOutputOptionAccess().getAtrJSONKeyword_5_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_25_3, null);
	    }

    |		lv_atr_25_4=	'ROXIE' 
    {
        newLeafNode(lv_atr_25_4, grammarAccess.getOutputOptionAccess().getAtrROXIEKeyword_5_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_25_4, null);
	    }

    |		lv_atr_25_5=	'XPATH' 
    {
        newLeafNode(lv_atr_25_5, grammarAccess.getOutputOptionAccess().getAtrXPATHKeyword_5_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputOptionRule());
	        }
       		setWithLastConsumed($current, "atr", lv_atr_25_5, null);
	    }

)

)
)	otherlv_26='(' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getOutputOptionAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionAccess().getValsValueParserRuleCall_5_2_0()); 
	    }
		lv_vals_27_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_27_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_28=')' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getOutputOptionAccess().getRightParenthesisKeyword_5_3());
    }
))
;





// Entry rule entryRuleOutputOptions
entryRuleOutputOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputOptionsRule()); }
	 iv_ruleOutputOptions=ruleOutputOptions 
	 { $current=$iv_ruleOutputOptions.current; } 
	 EOF 
;

// Rule OutputOptions
ruleOutputOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutputOptionsAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionsAccess().getOutput_opsOutputOptionParserRuleCall_1_0()); 
	    }
		lv_output_ops_1_0=ruleOutputOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionsRule());
	        }
       		add(
       			$current, 
       			"output_ops",
        		lv_output_ops_1_0, 
        		"OutputOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutputOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputOptionsAccess().getOutput_opsOutputOptionParserRuleCall_2_1_0()); 
	    }
		lv_output_ops_3_0=ruleOutputOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputOptionsRule());
	        }
       		add(
       			$current, 
       			"output_ops",
        		lv_output_ops_3_0, 
        		"OutputOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOutTypeSimple
entryRuleOutTypeSimple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutTypeSimpleRule()); }
	 iv_ruleOutTypeSimple=ruleOutTypeSimple 
	 { $current=$iv_ruleOutTypeSimple.current; } 
	 EOF 
;

// Rule OutTypeSimple
ruleOutTypeSimple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_type_0_1=	'BOOL' 
    {
        newLeafNode(lv_type_0_1, grammarAccess.getOutTypeSimpleAccess().getTypeBOOLKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutTypeSimpleRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_1, null);
	    }

    |		lv_type_0_2=	'INT' 
    {
        newLeafNode(lv_type_0_2, grammarAccess.getOutTypeSimpleAccess().getTypeINTKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutTypeSimpleRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_2, null);
	    }

    |		lv_type_0_3=	'STRING' 
    {
        newLeafNode(lv_type_0_3, grammarAccess.getOutTypeSimpleAccess().getTypeSTRINGKeyword_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutTypeSimpleRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_3, null);
	    }

    |		lv_type_0_4=	'ACTION' 
    {
        newLeafNode(lv_type_0_4, grammarAccess.getOutTypeSimpleAccess().getTypeACTIONKeyword_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutTypeSimpleRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_4, null);
	    }

)

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOutTypeSimpleAccess().getValValueParserRuleCall_1_0()); 
	    }
		lv_val_1_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutTypeSimpleRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_1_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOutDataset
entryRuleOutDataset returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutDatasetRule()); }
	 iv_ruleOutDataset=ruleOutDataset 
	 { $current=$iv_ruleOutDataset.current; } 
	 EOF 
;

// Rule OutDataset
ruleOutDataset returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DATASET' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutDatasetAccess().getDATASETKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutDatasetAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutDatasetRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutDatasetAccess().getOut_baseOutputBaseParserRuleCall_2_0()); 
	    }
		lv_out_base_2_0=ruleOutputBase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutDatasetRule());
	        }
       		set(
       			$current, 
       			"out_base",
        		lv_out_base_2_0, 
        		"OutputBase");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOutDatasetAccess().getOpsOutputOptionsParserRuleCall_3_0()); 
	    }
		lv_ops_3_0=ruleOutputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutDatasetRule());
	        }
       		set(
       			$current, 
       			"ops",
        		lv_ops_3_0, 
        		"OutputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleService
entryRuleService returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	 iv_ruleService=ruleService 
	 { $current=$iv_ruleService.current; } 
	 EOF 
;

// Rule Service
ruleService returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SERVICE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getSERVICEKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getOpsOutputOptionsParserRuleCall_2_0()); 
	    }
		lv_ops_2_0=ruleOutputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"ops",
        		lv_ops_2_0, 
        		"OutputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceAccess().getServServiceInputSectionParserRuleCall_3_0()); 
	    }
		lv_serv_3_0=ruleServiceInputSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceRule());
	        }
       		set(
       			$current, 
       			"serv",
        		lv_serv_3_0, 
        		"ServiceInputSection");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleOutputValue
entryRuleOutputValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputValueRule()); }
	 iv_ruleOutputValue=ruleOutputValue 
	 { $current=$iv_ruleOutputValue.current; } 
	 EOF 
;

// Rule OutputValue
ruleOutputValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOutputValueAccess().getOutTypeSimpleParserRuleCall_0_0()); 
    }
    this_OutTypeSimple_0=ruleOutTypeSimple
    { 
        $current = $this_OutTypeSimple_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutputValueAccess().getSemicolonKeyword_0_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOutputValueAccess().getOutDatasetParserRuleCall_1_0()); 
    }
    this_OutDataset_2=ruleOutDataset
    { 
        $current = $this_OutDataset_2.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputValueAccess().getEcl_varsECLOutputDeclParserRuleCall_1_1_0()); 
	    }
		lv_ecl_vars_3_0=ruleECLOutputDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputValueRule());
	        }
       		add(
       			$current, 
       			"ecl_vars",
        		lv_ecl_vars_3_0, 
        		"ECLOutputDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_4='END' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOutputValueAccess().getENDKeyword_1_2());
    }
))
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOutputValueAccess().getOutDatasetParserRuleCall_2_0()); 
    }
    this_OutDataset_5=ruleOutDataset
    { 
        $current = $this_OutDataset_5.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOutputValueAccess().getSemicolonKeyword_2_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOutputValueAccess().getServiceParserRuleCall_3_0()); 
    }
    this_Service_7=ruleService
    { 
        $current = $this_Service_7.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputValueAccess().getEcl_varsECLOutputDeclParserRuleCall_3_1_0()); 
	    }
		lv_ecl_vars_8_0=ruleECLOutputDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputValueRule());
	        }
       		add(
       			$current, 
       			"ecl_vars",
        		lv_ecl_vars_8_0, 
        		"ECLOutputDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_9='END' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOutputValueAccess().getENDKeyword_3_2());
    }
))
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOutputValueAccess().getServiceParserRuleCall_4_0()); 
    }
    this_Service_10=ruleService
    { 
        $current = $this_Service_10.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getOutputValueAccess().getSemicolonKeyword_4_1());
    }
))
;





// Entry rule entryRuleOutputBase
entryRuleOutputBase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputBaseRule()); }
	 iv_ruleOutputBase=ruleOutputBase 
	 { $current=$iv_ruleOutputBase.current; } 
	 EOF 
;

// Rule OutputBase
ruleOutputBase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutputBaseAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputBaseRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getOutputBaseAccess().getBaseDatatypeCrossReference_1_0()); 
	    }
		ruleTOKEN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutputBaseAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRulePermissions
entryRulePermissions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPermissionsRule()); }
	 iv_rulePermissions=rulePermissions 
	 { $current=$iv_rulePermissions.current; } 
	 EOF 
;

// Rule Permissions
rulePermissions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'PERMISSIONS' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getPermissionsAccess().getNamePERMISSIONSKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPermissionsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "PERMISSIONS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPermissionsAccess().getPermsPermissionParserRuleCall_1_0()); 
	    }
		lv_perms_1_0=rulePermission		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPermissionsRule());
	        }
       		add(
       			$current, 
       			"perms",
        		lv_perms_1_0, 
        		"Permission");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPermissionsAccess().getENDKeyword_2());
    }
))
;





// Entry rule entryRulePermission
entryRulePermission returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPermissionRule()); }
	 iv_rulePermission=rulePermission 
	 { $current=$iv_rulePermission.current; } 
	 EOF 
;

// Rule Permission
rulePermission returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'VIEW' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getPermissionAccess().getNameVIEWKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPermissionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "VIEW");
	    }

)
)
    |(
(
		lv_name_1_0=	'EDIT' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getPermissionAccess().getNameEDITKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPermissionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "EDIT");
	    }

)
)
    |(
(
		lv_name_2_0=	'RUN' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getPermissionAccess().getNameRUNKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPermissionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "RUN");
	    }

)
))	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPermissionAccess().getColonKeyword_1());
    }
(	otherlv_4='PUBLIC' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPermissionAccess().getPUBLICKeyword_2_0());
    }

    |	otherlv_5='PRIVATE' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPermissionAccess().getPRIVATEKeyword_2_1());
    }

    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPermissionAccess().getCust_levsCustomPermissionLevelParserRuleCall_2_2_0_0()); 
	    }
		lv_cust_levs_6_0=ruleCustomPermissionLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPermissionRule());
	        }
       		add(
       			$current, 
       			"cust_levs",
        		lv_cust_levs_6_0, 
        		"CustomPermissionLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPermissionAccess().getCommaKeyword_2_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPermissionAccess().getCust_levsCustomPermissionLevelParserRuleCall_2_2_1_1_0()); 
	    }
		lv_cust_levs_8_0=ruleCustomPermissionLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPermissionRule());
	        }
       		add(
       			$current, 
       			"cust_levs",
        		lv_cust_levs_8_0, 
        		"CustomPermissionLevel");
	        afterParserOrEnumRuleCall();
	    }

)
))?))	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPermissionAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleCustomPermissionLevel
entryRuleCustomPermissionLevel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomPermissionLevelRule()); }
	 iv_ruleCustomPermissionLevel=ruleCustomPermissionLevel 
	 { $current=$iv_ruleCustomPermissionLevel.current; } 
	 EOF 
;

// Rule CustomPermissionLevel
ruleCustomPermissionLevel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='USER' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomPermissionLevelAccess().getUSERKeyword_0_0());
    }

    |	otherlv_1='GROUP' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCustomPermissionLevelAccess().getGROUPKeyword_0_1());
    }
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomPermissionLevelAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomPermissionLevelAccess().getValsValueParserRuleCall_2_0()); 
	    }
		lv_vals_3_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomPermissionLevelRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_3_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCustomPermissionLevelAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomPermissionLevelAccess().getValsValueParserRuleCall_3_1_0()); 
	    }
		lv_vals_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomPermissionLevelRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCustomPermissionLevelAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleGenerateSection
entryRuleGenerateSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenerateSectionRule()); }
	 iv_ruleGenerateSection=ruleGenerateSection 
	 { $current=$iv_ruleGenerateSection.current; } 
	 EOF 
;

// Rule GenerateSection
ruleGenerateSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGenerateSectionAccess().getGenerateBodyInlineParserRuleCall_0()); 
    }
    this_GenerateBodyInline_0=ruleGenerateBodyInline
    { 
        $current = $this_GenerateBodyInline_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGenerateSectionAccess().getGenerateBodySaltParserRuleCall_1()); 
    }
    this_GenerateBodySalt_1=ruleGenerateBodySalt
    { 
        $current = $this_GenerateBodySalt_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGenerateSectionAccess().getGenerateBodyKelParserRuleCall_2()); 
    }
    this_GenerateBodyKel_2=ruleGenerateBodyKel
    { 
        $current = $this_GenerateBodyKel_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGenerateBodyInline
entryRuleGenerateBodyInline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenerateBodyInlineRule()); }
	 iv_ruleGenerateBodyInline=ruleGenerateBodyInline 
	 { $current=$iv_ruleGenerateBodyInline.current; } 
	 EOF 
;

// Rule GenerateBodyInline
ruleGenerateBodyInline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'GENERATES' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getGenerateBodyInlineAccess().getNameGENERATESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenerateBodyInlineRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "GENERATES");
	    }

)
)this_GEN_BLOCK_1=RULE_GEN_BLOCK
    { 
    newLeafNode(this_GEN_BLOCK_1, grammarAccess.getGenerateBodyInlineAccess().getGEN_BLOCKTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleGenerateBodySalt
entryRuleGenerateBodySalt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenerateBodySaltRule()); }
	 iv_ruleGenerateBodySalt=ruleGenerateBodySalt 
	 { $current=$iv_ruleGenerateBodySalt.current; } 
	 EOF 
;

// Rule GenerateBodySalt
ruleGenerateBodySalt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'GENERATES' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getGenerateBodySaltAccess().getNameGENERATESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenerateBodySaltRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "GENERATES");
	    }

)
)	otherlv_1='SALT' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGenerateBodySaltAccess().getSALTKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGenerateBodySaltAccess().getLeftParenthesisKeyword_2());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGenerateBodySaltAccess().getTOKENParserRuleCall_3()); 
    }
ruleTOKEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGenerateBodySaltAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGenerateBodySaltAccess().getColonKeyword_5());
    }
(	otherlv_6='SCOREDSEARCH' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGenerateBodySaltAccess().getSCOREDSEARCHKeyword_6_0());
    }

    |	otherlv_7='PROFILE' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGenerateBodySaltAccess().getPROFILEKeyword_6_1());
    }
)((	'ENDGENERATES' 
)=>	otherlv_8='ENDGENERATES' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGenerateBodySaltAccess().getENDGENERATESKeyword_7());
    }
))
;





// Entry rule entryRuleGenerateBodyKel
entryRuleGenerateBodyKel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenerateBodyKelRule()); }
	 iv_ruleGenerateBodyKel=ruleGenerateBodyKel 
	 { $current=$iv_ruleGenerateBodyKel.current; } 
	 EOF 
;

// Rule GenerateBodyKel
ruleGenerateBodyKel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'GENERATES' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getGenerateBodyKelAccess().getNameGENERATESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenerateBodyKelRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "GENERATES");
	    }

)
)	otherlv_1='KEL' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGenerateBodyKelAccess().getKELKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGenerateBodyKelAccess().getLeftParenthesisKeyword_2());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getGenerateBodyKelAccess().getTOKENParserRuleCall_3()); 
    }
ruleTOKEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGenerateBodyKelAccess().getRightParenthesisKeyword_4());
    }
((	'ENDGENERATES' 
)=>	otherlv_5='ENDGENERATES' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGenerateBodyKelAccess().getENDGENERATESKeyword_5());
    }
))
;





// Entry rule entryRuleVisualSection
entryRuleVisualSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualSectionRule()); }
	 iv_ruleVisualSection=ruleVisualSection 
	 { $current=$iv_ruleVisualSection.current; } 
	 EOF 
;

// Rule VisualSection
ruleVisualSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_section_name_0_0=	'VISUALIZE' 
    {
        newLeafNode(lv_section_name_0_0, grammarAccess.getVisualSectionAccess().getSection_nameVISUALIZEKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualSectionRule());
	        }
       		setWithLastConsumed($current, "section_name", lv_section_name_0_0, "VISUALIZE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionAccess().getNameTOKENParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionAccess().getVis_opsVisualSectionOptionsParserRuleCall_2_0()); 
	    }
		lv_vis_ops_2_0=ruleVisualSectionOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionRule());
	        }
       		set(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_2_0, 
        		"VisualSectionOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionAccess().getVis_elementsVisualizationParserRuleCall_3_0()); 
	    }
		lv_vis_elements_3_0=ruleVisualization		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionRule());
	        }
       		add(
       			$current, 
       			"vis_elements",
        		lv_vis_elements_3_0, 
        		"Visualization");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_4='END' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVisualSectionAccess().getENDKeyword_4());
    }
))
;





// Entry rule entryRuleVisName
entryRuleVisName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisNameRule()); }
	 iv_ruleVisName=ruleVisName 
	 { $current=$iv_ruleVisName.current; } 
	 EOF 
;

// Rule VisName
ruleVisName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=	'CHORO' 
    {
        newLeafNode(lv_name_0_1, grammarAccess.getVisNameAccess().getNameCHOROKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_1, null);
	    }

    |		lv_name_0_2=	'LINE' 
    {
        newLeafNode(lv_name_0_2, grammarAccess.getVisNameAccess().getNameLINEKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_2, null);
	    }

    |		lv_name_0_3=	'TIMELINE' 
    {
        newLeafNode(lv_name_0_3, grammarAccess.getVisNameAccess().getNameTIMELINEKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_3, null);
	    }

    |		lv_name_0_4=	'PIE' 
    {
        newLeafNode(lv_name_0_4, grammarAccess.getVisNameAccess().getNamePIEKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_4, null);
	    }

    |		lv_name_0_5=	'BAR' 
    {
        newLeafNode(lv_name_0_5, grammarAccess.getVisNameAccess().getNameBARKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_5, null);
	    }

    |		lv_name_0_6=	'TABLE' 
    {
        newLeafNode(lv_name_0_6, grammarAccess.getVisNameAccess().getNameTABLEKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_6, null);
	    }

    |		lv_name_0_7=	'GRAPH' 
    {
        newLeafNode(lv_name_0_7, grammarAccess.getVisNameAccess().getNameGRAPHKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_7, null);
	    }

    |		lv_name_0_8=	'FORM' 
    {
        newLeafNode(lv_name_0_8, grammarAccess.getVisNameAccess().getNameFORMKeyword_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_8, null);
	    }

    |		lv_name_0_9=	'GROUP' 
    {
        newLeafNode(lv_name_0_9, grammarAccess.getVisNameAccess().getNameGROUPKeyword_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_9, null);
	    }

    |		lv_name_0_10=	'SLIDER' 
    {
        newLeafNode(lv_name_0_10, grammarAccess.getVisNameAccess().getNameSLIDERKeyword_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisNameRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_10, null);
	    }

)

)
)
;





// Entry rule entryRuleVisInputValue
entryRuleVisInputValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisInputValueRule()); }
	 iv_ruleVisInputValue=ruleVisInputValue 
	 { $current=$iv_ruleVisInputValue.current; } 
	 EOF 
;

// Rule VisInputValue
ruleVisInputValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVisInputValueAccess().getInputSimpleTypesParserRuleCall_0()); 
    }
    this_InputSimpleTypes_0=ruleInputSimpleTypes
    { 
        $current = $this_InputSimpleTypes_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisInputValueAccess().getIn_opsInputOptionsParserRuleCall_1_0()); 
	    }
		lv_in_ops_1_0=ruleInputOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisInputValueRule());
	        }
       		set(
       			$current, 
       			"in_ops",
        		lv_in_ops_1_0, 
        		"InputOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisInputValueAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleVisBasisParens
entryRuleVisBasisParens returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisBasisParensRule()); }
	 iv_ruleVisBasisParens=ruleVisBasisParens 
	 { $current=$iv_ruleVisBasisParens.current; } 
	 EOF 
;

// Rule VisBasisParens
ruleVisBasisParens returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisBasisParensAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisBasisParensAccess().getInputVisBasisParserRuleCall_1_0()); 
	    }
		lv_input_1_0=ruleVisBasis		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisBasisParensRule());
	        }
       		set(
       			$current, 
       			"input",
        		lv_input_1_0, 
        		"VisBasis");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisBasisParensAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleVisualization
entryRuleVisualization returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualizationRule()); }
	 iv_ruleVisualization=ruleVisualization 
	 { $current=$iv_ruleVisualization.current; } 
	 EOF 
;

// Rule Visualization
ruleVisualization returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getTypeVisNameParserRuleCall_0_0_0()); 
	    }
		lv_type_0_0=ruleVisName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"VisName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getNameTOKENParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getParensVisBasisParensParserRuleCall_0_2_0()); 
	    }
		lv_parens_2_0=ruleVisBasisParens		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"parens",
        		lv_parens_2_0, 
        		"VisBasisParens");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getVis_opVisualOptionsParserRuleCall_0_3_0()); 
	    }
		lv_vis_op_3_0=ruleVisualOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"vis_op",
        		lv_vis_op_3_0, 
        		"VisualOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVisualizationAccess().getSemicolonKeyword_0_4());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getTypeVisNameParserRuleCall_1_0_0()); 
	    }
		lv_type_5_0=ruleVisName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"VisName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getNameTOKENParserRuleCall_1_1_0()); 
	    }
		lv_name_6_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getParensVisBasisParensParserRuleCall_1_2_0()); 
	    }
		lv_parens_7_0=ruleVisBasisParens		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"parens",
        		lv_parens_7_0, 
        		"VisBasisParens");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getVis_opVisualOptionsParserRuleCall_1_3_0()); 
	    }
		lv_vis_op_8_0=ruleVisualOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		set(
       			$current, 
       			"vis_op",
        		lv_vis_op_8_0, 
        		"VisualOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualizationAccess().getInput_valVisInputValueParserRuleCall_1_4_0()); 
	    }
		lv_input_val_9_0=ruleVisInputValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualizationRule());
	        }
       		add(
       			$current, 
       			"input_val",
        		lv_input_val_9_0, 
        		"VisInputValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_10='END' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVisualizationAccess().getENDKeyword_1_5());
    }
)))
;





// Entry rule entryRuleVisBasis
entryRuleVisBasis returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisBasisRule()); }
	 iv_ruleVisBasis=ruleVisBasis 
	 { $current=$iv_ruleVisBasis.current; } 
	 EOF 
;

// Rule VisBasis
ruleVisBasis returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisBasisRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVisBasisAccess().getBasisOutDatasetCrossReference_0_0()); 
	    }
		ruleTOKEN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVisBasisAccess().getFilterVisFilterParserRuleCall_1_0()); 
	    }
		lv_filter_1_0=ruleVisFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisBasisRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_1_0, 
        		"VisFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getVisBasisAccess().getQualsVisBasisQualifiersParserRuleCall_2_0()); 
	    }
		lv_quals_2_0=ruleVisBasisQualifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisBasisRule());
	        }
       		set(
       			$current, 
       			"quals",
        		lv_quals_2_0, 
        		"VisBasisQualifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleVisFilter
entryRuleVisFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisFilterRule()); }
	 iv_ruleVisFilter=ruleVisFilter 
	 { $current=$iv_ruleVisFilter.current; } 
	 EOF 
;

// Rule VisFilter
ruleVisFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisFilterAccess().getLeftParenthesisKeyword_0());
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getVisFilterAccess().getValsValueParserRuleCall_1_0()); 
	    }
		lv_vals_1_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisFilterRule());
	        }
       		add(
       			$current, 
       			"vals",
        		lv_vals_1_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisFilterAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleVisBasisQualifiers
entryRuleVisBasisQualifiers returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisBasisQualifiersRule()); }
	 iv_ruleVisBasisQualifiers=ruleVisBasisQualifiers 
	 { $current=$iv_ruleVisBasisQualifiers.current; } 
	 EOF 
;

// Rule VisBasisQualifiers
ruleVisBasisQualifiers returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisBasisQualifiersAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisBasisQualifiersAccess().getFuncsFunctionParserRuleCall_1_0()); 
	    }
		lv_funcs_1_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisBasisQualifiersRule());
	        }
       		set(
       			$current, 
       			"funcs",
        		lv_funcs_1_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisBasisQualifiersAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisBasisQualifiersAccess().getQfuncsQFunctionParserRuleCall_2_1_0()); 
	    }
		lv_qfuncs_3_0=ruleQFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisBasisQualifiersRule());
	        }
       		add(
       			$current, 
       			"qfuncs",
        		lv_qfuncs_3_0, 
        		"QFunction");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVisBasisQualifiersAccess().getRightCurlyBracketKeyword_3());
    }
)
;







// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	 iv_ruleFunction=ruleFunction 
	 { $current=$iv_ruleFunction.current; } 
	 EOF 
;

// Rule Function
ruleFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getValsValueParserRuleCall_0_0()); 
	    }
		lv_vals_0_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_0_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getHyphenMinusKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getValsValueParserRuleCall_1_1_0()); 
	    }
		lv_vals_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getAggFunctionParserRuleCall_2()); 
    }
ruleAggFunction
    { 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_4='-' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getHyphenMinusKeyword_3_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getAggFunctionParserRuleCall_3_1()); 
    }
ruleAggFunction
    { 
        afterParserOrEnumRuleCall();
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getCountFunctionParserRuleCall_4()); 
    }
ruleCountFunction
    { 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_7='-' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFunctionAccess().getHyphenMinusKeyword_5_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getCountFunctionParserRuleCall_5_1()); 
    }
ruleCountFunction
    { 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_9='SCALE' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFunctionAccess().getSCALEKeyword_6_0());
    }
	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_6_1());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getCountFunctionParserRuleCall_6_2_0()); 
    }
ruleCountFunction
    { 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getAggFunctionParserRuleCall_6_2_1()); 
    }
ruleAggFunction
    { 
        afterParserOrEnumRuleCall();
    }
)	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFunctionAccess().getCommaKeyword_6_3());
    }
(
(
		lv_type_14_0=RULE_INT
		{
			newLeafNode(lv_type_14_0, grammarAccess.getFunctionAccess().getTypeINTTerminalRuleCall_6_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_14_0, 
        		"INT");
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_6_5());
    }
))
;





// Entry rule entryRuleQFunction
entryRuleQFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQFunctionRule()); }
	 iv_ruleQFunction=ruleQFunction 
	 { $current=$iv_ruleQFunction.current; } 
	 EOF 
;

// Rule QFunction
ruleQFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getQFunctionAccess().getFunctionParserRuleCall_0()); 
    }
    this_Function_0=ruleFunction
    { 
        $current = $this_Function_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getQFunctionAccess().getNestBasisQualifierParserRuleCall_1()); 
    }
    this_NestBasisQualifier_1=ruleNestBasisQualifier
    { 
        $current = $this_NestBasisQualifier_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNestBasisQualifier
entryRuleNestBasisQualifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestBasisQualifierRule()); }
	 iv_ruleNestBasisQualifier=ruleNestBasisQualifier 
	 { $current=$iv_ruleNestBasisQualifier.current; } 
	 EOF 
;

// Rule NestBasisQualifier
ruleNestBasisQualifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNestBasisQualifierAccess().getTOKENParserRuleCall_0()); 
    }
ruleTOKEN
    { 
        afterParserOrEnumRuleCall();
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNestBasisQualifierAccess().getVisBasisQualifiersParserRuleCall_1()); 
    }
    this_VisBasisQualifiers_1=ruleVisBasisQualifiers
    { 
        $current = $this_VisBasisQualifiers_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCountFunction
entryRuleCountFunction returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCountFunctionRule()); } 
	 iv_ruleCountFunction=ruleCountFunction 
	 { $current=$iv_ruleCountFunction.current.getText(); }  
	 EOF 
;

// Rule CountFunction
ruleCountFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='COUNT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCountFunctionAccess().getCOUNTKeyword()); 
    }

    ;





// Entry rule entryRuleAggFunction
entryRuleAggFunction returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAggFunctionRule()); } 
	 iv_ruleAggFunction=ruleAggFunction 
	 { $current=$iv_ruleAggFunction.current.getText(); }  
	 EOF 
;

// Rule AggFunction
ruleAggFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='SUM' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAggFunctionAccess().getSUMKeyword_0_0()); 
    }

    |
	kw='AVE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAggFunctionAccess().getAVEKeyword_0_1()); 
    }

    |
	kw='MAX' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAggFunctionAccess().getMAXKeyword_0_2()); 
    }

    |
	kw='MIN' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAggFunctionAccess().getMINKeyword_0_3()); 
    }
)
	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAggFunctionAccess().getLeftParenthesisKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getAggFunctionAccess().getTOKENParserRuleCall_2()); 
    }
    this_TOKEN_5=ruleTOKEN    {
		$current.merge(this_TOKEN_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAggFunctionAccess().getRightParenthesisKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleVisualSectionOptions
entryRuleVisualSectionOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualSectionOptionsRule()); }
	 iv_ruleVisualSectionOptions=ruleVisualSectionOptions 
	 { $current=$iv_ruleVisualSectionOptions.current; } 
	 EOF 
;

// Rule VisualSectionOptions
ruleVisualSectionOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisualSectionOptionsAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionOptionsAccess().getVis_opsVisualSectionOptionParserRuleCall_1_0()); 
	    }
		lv_vis_ops_1_0=ruleVisualSectionOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionOptionsRule());
	        }
       		add(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_1_0, 
        		"VisualSectionOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisualSectionOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionOptionsAccess().getVis_opsVisualSectionOptionParserRuleCall_2_1_0()); 
	    }
		lv_vis_ops_3_0=ruleVisualSectionOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionOptionsRule());
	        }
       		add(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_3_0, 
        		"VisualSectionOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleVisualSectionOption
entryRuleVisualSectionOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualSectionOptionRule()); }
	 iv_ruleVisualSectionOption=ruleVisualSectionOption 
	 { $current=$iv_ruleVisualSectionOption.current; } 
	 EOF 
;

// Rule VisualSectionOption
ruleVisualSectionOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_name_0_0=	'LABEL' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVisualSectionOptionAccess().getNameLABELKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualSectionOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "LABEL");
	    }

)
)
    |(
(
		lv_name_1_0=	'TITLE' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getVisualSectionOptionAccess().getNameTITLEKeyword_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualSectionOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "TITLE");
	    }

)
))	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisualSectionOptionAccess().getLeftParenthesisKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionOptionAccess().getValsValueParserRuleCall_0_2_0()); 
	    }
		lv_vals_3_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionOptionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_3_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVisualSectionOptionAccess().getRightParenthesisKeyword_0_3());
    }
)
    |((
(
		lv_name_5_0=	'ENABLE' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getVisualSectionOptionAccess().getNameENABLEKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualSectionOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "ENABLE");
	    }

)
)	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVisualSectionOptionAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualSectionOptionAccess().getAssignsAssignListParserRuleCall_1_2_0()); 
	    }
		lv_assigns_7_0=ruleAssignList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualSectionOptionRule());
	        }
       		set(
       			$current, 
       			"assigns",
        		lv_assigns_7_0, 
        		"AssignList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVisualSectionOptionAccess().getRightParenthesisKeyword_1_3());
    }
)
    |((
(
		lv_name_9_0=	'EXPLORE' 
    {
        newLeafNode(lv_name_9_0, grammarAccess.getVisualSectionOptionAccess().getNameEXPLOREKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualSectionOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_9_0, "EXPLORE");
	    }

)
)
    |(
(
		lv_name_10_0=	'PRIMARY' 
    {
        newLeafNode(lv_name_10_0, grammarAccess.getVisualSectionOptionAccess().getNamePRIMARYKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualSectionOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_10_0, "PRIMARY");
	    }

)
)))
;





// Entry rule entryRuleVizAssign
entryRuleVizAssign returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVizAssignRule()); }
	 iv_ruleVizAssign=ruleVizAssign 
	 { $current=$iv_ruleVizAssign.current; } 
	 EOF 
;

// Rule VizAssign
ruleVizAssign returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVizAssignAccess().getVal_lValueParserRuleCall_0_0()); 
	    }
		lv_val_l_0_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVizAssignRule());
	        }
       		set(
       			$current, 
       			"val_l",
        		lv_val_l_0_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVizAssignAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVizAssignAccess().getVal_rValueListParserRuleCall_2_0()); 
	    }
		lv_val_r_2_0=ruleValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVizAssignRule());
	        }
       		set(
       			$current, 
       			"val_r",
        		lv_val_r_2_0, 
        		"ValueList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVizAssignList
entryRuleVizAssignList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVizAssignListRule()); }
	 iv_ruleVizAssignList=ruleVizAssignList 
	 { $current=$iv_ruleVizAssignList.current; } 
	 EOF 
;

// Rule VizAssignList
ruleVizAssignList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVizAssignListAccess().getAssignsVizAssignParserRuleCall_0_0()); 
	    }
		lv_assigns_0_0=ruleVizAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVizAssignListRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_0_0, 
        		"VizAssign");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVizAssignListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVizAssignListAccess().getAssignsVizAssignParserRuleCall_1_1_0()); 
	    }
		lv_assigns_2_0=ruleVizAssign		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVizAssignListRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_2_0, 
        		"VizAssign");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleVizEnumDecl
entryRuleVizEnumDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVizEnumDeclRule()); }
	 iv_ruleVizEnumDecl=ruleVizEnumDecl 
	 { $current=$iv_ruleVizEnumDecl.current; } 
	 EOF 
;

// Rule VizEnumDecl
ruleVizEnumDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'ENUM' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVizEnumDeclAccess().getNameENUMKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVizEnumDeclRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "ENUM");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVizEnumDeclAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVizEnumDeclAccess().getAssignsVizAssignListParserRuleCall_2_0()); 
	    }
		lv_assigns_2_0=ruleVizAssignList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVizEnumDeclRule());
	        }
       		set(
       			$current, 
       			"assigns",
        		lv_assigns_2_0, 
        		"VizAssignList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVizEnumDeclAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleVisualOptions
entryRuleVisualOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualOptionsRule()); }
	 iv_ruleVisualOptions=ruleVisualOptions 
	 { $current=$iv_ruleVisualOptions.current; } 
	 EOF 
;

// Rule VisualOptions
ruleVisualOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVisualOptionsAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionsAccess().getVis_opsVisualOptionParserRuleCall_1_0()); 
	    }
		lv_vis_ops_1_0=ruleVisualOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionsRule());
	        }
       		add(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_1_0, 
        		"VisualOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVisualOptionsAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionsAccess().getVis_opsVisualOptionParserRuleCall_2_1_0()); 
	    }
		lv_vis_ops_3_0=ruleVisualOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionsRule());
	        }
       		add(
       			$current, 
       			"vis_ops",
        		lv_vis_ops_3_0, 
        		"VisualOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleVisualOption
entryRuleVisualOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualOptionRule()); }
	 iv_ruleVisualOption=ruleVisualOption 
	 { $current=$iv_ruleVisualOption.current; } 
	 EOF 
;

// Rule VisualOption
ruleVisualOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_name_0_0=	'TITLE' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVisualOptionAccess().getNameTITLEKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "TITLE");
	    }

)
)
    |(
(
		lv_name_1_0=	'DATE' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getVisualOptionAccess().getNameDATEKeyword_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "DATE");
	    }

)
)
    |(
(
		lv_name_2_0=	'DESCRIPTION' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getVisualOptionAccess().getNameDESCRIPTIONKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "DESCRIPTION");
	    }

)
)
    |(
(
		lv_name_3_0=	'PICTURE' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getVisualOptionAccess().getNamePICTUREKeyword_0_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "PICTURE");
	    }

)
)
    |(
(
		lv_name_4_0=	'STATE' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getVisualOptionAccess().getNameSTATEKeyword_0_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "STATE");
	    }

)
)
    |(
(
		lv_name_5_0=	'COUNTY' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getVisualOptionAccess().getNameCOUNTYKeyword_0_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "COUNTY");
	    }

)
)
    |(
(
		lv_name_6_0=	'FIRST' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getVisualOptionAccess().getNameFIRSTKeyword_0_0_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "FIRST");
	    }

)
)
    |(
(
		lv_name_7_0=	'WEIGHT' 
    {
        newLeafNode(lv_name_7_0, grammarAccess.getVisualOptionAccess().getNameWEIGHTKeyword_0_0_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_7_0, "WEIGHT");
	    }

)
)
    |(
(
		lv_name_8_0=	'SIZE' 
    {
        newLeafNode(lv_name_8_0, grammarAccess.getVisualOptionAccess().getNameSIZEKeyword_0_0_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_8_0, "SIZE");
	    }

)
)
    |(
(
		lv_name_9_0=	'LEVELS' 
    {
        newLeafNode(lv_name_9_0, grammarAccess.getVisualOptionAccess().getNameLEVELSKeyword_0_0_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_9_0, "LEVELS");
	    }

)
)
    |(
(
		lv_name_10_0=	'LEVEL' 
    {
        newLeafNode(lv_name_10_0, grammarAccess.getVisualOptionAccess().getNameLEVELKeyword_0_0_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_10_0, "LEVEL");
	    }

)
)
    |(
(
		lv_name_11_0=	'UID' 
    {
        newLeafNode(lv_name_11_0, grammarAccess.getVisualOptionAccess().getNameUIDKeyword_0_0_11_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_11_0, "UID");
	    }

)
)
    |(
(
		lv_name_12_0=	'TYPE' 
    {
        newLeafNode(lv_name_12_0, grammarAccess.getVisualOptionAccess().getNameTYPEKeyword_0_0_12_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_12_0, "TYPE");
	    }

)
))	otherlv_13='(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getVisualOptionAccess().getLeftParenthesisKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getFuncsFunctionParserRuleCall_0_2_0()); 
	    }
		lv_funcs_14_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_14_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getVisualOptionAccess().getRightParenthesisKeyword_0_3());
    }
)
    |(((
(
		lv_name_16_0=	'ICON' 
    {
        newLeafNode(lv_name_16_0, grammarAccess.getVisualOptionAccess().getNameICONKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_16_0, "ICON");
	    }

)
)
    |(
(
		lv_name_17_0=	'FLAG' 
    {
        newLeafNode(lv_name_17_0, grammarAccess.getVisualOptionAccess().getNameFLAGKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_17_0, "FLAG");
	    }

)
)
    |(
(
		lv_name_18_0=	'TYPE' 
    {
        newLeafNode(lv_name_18_0, grammarAccess.getVisualOptionAccess().getNameTYPEKeyword_1_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_18_0, "TYPE");
	    }

)
))	otherlv_19='(' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getVisualOptionAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getFuncsFunctionParserRuleCall_1_2_0()); 
	    }
		lv_funcs_20_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_20_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getVisualOptionAccess().getCommaKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getDeclVizEnumDeclParserRuleCall_1_3_1_0()); 
	    }
		lv_decl_22_0=ruleVizEnumDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		set(
       			$current, 
       			"decl",
        		lv_decl_22_0, 
        		"VizEnumDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_23=')' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getVisualOptionAccess().getRightParenthesisKeyword_1_4());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getVis_custVisualCustomOptionParserRuleCall_2_0()); 
	    }
		lv_vis_cust_24_0=ruleVisualCustomOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		set(
       			$current, 
       			"vis_cust",
        		lv_vis_cust_24_0, 
        		"VisualCustomOption");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_name_25_0=	'COLLAPSE' 
    {
        newLeafNode(lv_name_25_0, grammarAccess.getVisualOptionAccess().getNameCOLLAPSEKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_25_0, "COLLAPSE");
	    }

)
)
    |((
(
		lv_name_26_0=	'VISIBILITY' 
    {
        newLeafNode(lv_name_26_0, grammarAccess.getVisualOptionAccess().getNameVISIBILITYKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_26_0, "VISIBILITY");
	    }

)
)	otherlv_27='(' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getVisualOptionAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getVisibility_opVisibilityOptionParserRuleCall_4_2_0()); 
	    }
		lv_visibility_op_28_0=ruleVisibilityOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		set(
       			$current, 
       			"visibility_op",
        		lv_visibility_op_28_0, 
        		"VisibilityOption");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_29=')' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getVisualOptionAccess().getRightParenthesisKeyword_4_3());
    }
)
    |((
(
		lv_name_30_0=	'ENABLE' 
    {
        newLeafNode(lv_name_30_0, grammarAccess.getVisualOptionAccess().getNameENABLEKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_30_0, "ENABLE");
	    }

)
)	otherlv_31='(' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getVisualOptionAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getAssignsAssignListParserRuleCall_5_2_0()); 
	    }
		lv_assigns_32_0=ruleAssignList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"assigns",
        		lv_assigns_32_0, 
        		"AssignList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_33=')' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getVisualOptionAccess().getRightParenthesisKeyword_5_3());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVisualOptionAccess().getVisualCustomOptionParserRuleCall_6_0()); 
    }
    this_VisualCustomOption_34=ruleVisualCustomOption
    { 
        $current = $this_VisualCustomOption_34.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_35='(' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getVisualOptionAccess().getLeftParenthesisKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getFuncsFunctionParserRuleCall_6_2_0()); 
	    }
		lv_funcs_36_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_36_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_37=',' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getVisualOptionAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getFuncsFunctionParserRuleCall_6_3_1_0()); 
	    }
		lv_funcs_38_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_38_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_39=')' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getVisualOptionAccess().getRightParenthesisKeyword_6_4());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVisualOptionAccess().getVisualMultivalParserRuleCall_7_0()); 
    }
    this_VisualMultival_40=ruleVisualMultival
    { 
        $current = $this_VisualMultival_40.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_41='(' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getVisualOptionAccess().getLeftParenthesisKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getFuncsFunctionParserRuleCall_7_2_0()); 
	    }
		lv_funcs_42_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_42_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_43=',' 
    {
    	newLeafNode(otherlv_43, grammarAccess.getVisualOptionAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualOptionAccess().getFuncsFunctionParserRuleCall_7_3_1_0()); 
	    }
		lv_funcs_44_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualOptionRule());
	        }
       		add(
       			$current, 
       			"funcs",
        		lv_funcs_44_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_45=')' 
    {
    	newLeafNode(otherlv_45, grammarAccess.getVisualOptionAccess().getRightParenthesisKeyword_7_4());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVisualOptionAccess().getSelectOptionParserRuleCall_8()); 
    }
    this_SelectOption_46=ruleSelectOption
    { 
        $current = $this_SelectOption_46.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getVisualOptionAccess().getLinkOptionParserRuleCall_9()); 
    }
    this_LinkOption_47=ruleLinkOption
    { 
        $current = $this_LinkOption_47.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSelectEvent
entryRuleSelectEvent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectEventRule()); }
	 iv_ruleSelectEvent=ruleSelectEvent 
	 { $current=$iv_ruleSelectEvent.current; } 
	 EOF 
;

// Rule SelectEvent
ruleSelectEvent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSelectEventAccess().getValueParserRuleCall()); 
    }
    this_Value_0=ruleValue
    { 
        $current = $this_Value_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSelectOptionMapping
entryRuleSelectOptionMapping returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectOptionMappingRule()); } 
	 iv_ruleSelectOptionMapping=ruleSelectOptionMapping 
	 { $current=$iv_ruleSelectOptionMapping.current.getText(); }  
	 EOF 
;

// Rule SelectOptionMapping
ruleSelectOptionMapping returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSelectOptionMappingAccess().getTOKENParserRuleCall_0()); 
    }
    this_TOKEN_0=ruleTOKEN    {
		$current.merge(this_TOKEN_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='->' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectOptionMappingAccess().getHyphenMinusGreaterThanSignKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getSelectOptionMappingAccess().getTOKENParserRuleCall_2()); 
    }
    this_TOKEN_2=ruleTOKEN    {
		$current.merge(this_TOKEN_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSelectOptionMappingAccess().getCommaKeyword_3_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getSelectOptionMappingAccess().getTOKENParserRuleCall_3_1()); 
    }
    this_TOKEN_4=ruleTOKEN    {
		$current.merge(this_TOKEN_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleSelectOption
entryRuleSelectOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectOptionRule()); }
	 iv_ruleSelectOption=ruleSelectOption 
	 { $current=$iv_ruleSelectOption.current; } 
	 EOF 
;

// Rule SelectOption
ruleSelectOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SELECTS' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSelectOptionAccess().getSELECTSKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSelectOptionAccess().getLeftParenthesisKeyword_1());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSelectOptionAccess().getSelectEventParserRuleCall_2_0()); 
    }
    this_SelectEvent_2=ruleSelectEvent
    { 
        $current = $this_SelectEvent_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSelectOptionAccess().getCommaKeyword_2_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectOptionAccess().getMapsSelectOptionMappingParserRuleCall_3_0()); 
	    }
		lv_maps_4_0=ruleSelectOptionMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectOptionRule());
	        }
       		add(
       			$current, 
       			"maps",
        		lv_maps_4_0, 
        		"SelectOptionMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSelectOptionAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectOptionAccess().getMapsSelectOptionMappingParserRuleCall_4_1_0()); 
	    }
		lv_maps_6_0=ruleSelectOptionMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectOptionRule());
	        }
       		add(
       			$current, 
       			"maps",
        		lv_maps_6_0, 
        		"SelectOptionMapping");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSelectOptionAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleLinkOption
entryRuleLinkOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkOptionRule()); }
	 iv_ruleLinkOption=ruleLinkOption 
	 { $current=$iv_ruleLinkOption.current; } 
	 EOF 
;

// Rule LinkOption
ruleLinkOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LINK' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkOptionAccess().getLINKKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLinkOptionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkOptionAccess().getNameTOKENParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkOptionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLinkOptionAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkOptionAccess().getOpsVisualOptionParserRuleCall_3_1_0()); 
	    }
		lv_ops_4_0=ruleVisualOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkOptionRule());
	        }
       		add(
       			$current, 
       			"ops",
        		lv_ops_4_0, 
        		"VisualOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLinkOptionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleVisualMultival
entryRuleVisualMultival returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualMultivalRule()); }
	 iv_ruleVisualMultival=ruleVisualMultival 
	 { $current=$iv_ruleVisualMultival.current; } 
	 EOF 
;

// Rule VisualMultival
ruleVisualMultival returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'X' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVisualMultivalAccess().getNameXKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "X");
	    }

)
)
    |(
(
		lv_name_1_0=	'Y' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getVisualMultivalAccess().getNameYKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "Y");
	    }

)
)
    |(
(
		lv_name_2_0=	'COLOR' 
    {
        newLeafNode(lv_name_2_0, grammarAccess.getVisualMultivalAccess().getNameCOLORKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_2_0, "COLOR");
	    }

)
)
    |(
(
		lv_name_3_0=	'RANGE' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getVisualMultivalAccess().getNameRANGEKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "RANGE");
	    }

)
)
    |(
(
		lv_name_4_0=	'FILTER' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getVisualMultivalAccess().getNameFILTERKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "FILTER");
	    }

)
)
    |(
(
		lv_name_5_0=	'LABEL' 
    {
        newLeafNode(lv_name_5_0, grammarAccess.getVisualMultivalAccess().getNameLABELKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_5_0, "LABEL");
	    }

)
)
    |(
(
		lv_name_6_0=	'VALUE' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getVisualMultivalAccess().getNameVALUEKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "VALUE");
	    }

)
)
    |(
(
		lv_name_7_0=	'SORT' 
    {
        newLeafNode(lv_name_7_0, grammarAccess.getVisualMultivalAccess().getNameSORTKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_7_0, "SORT");
	    }

)
)
    |(
(
		lv_name_8_0=	'BRANCHES' 
    {
        newLeafNode(lv_name_8_0, grammarAccess.getVisualMultivalAccess().getNameBRANCHESKeyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisualMultivalRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_8_0, "BRANCHES");
	    }

)
))
;





// Entry rule entryRuleVisibilityOption
entryRuleVisibilityOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisibilityOptionRule()); }
	 iv_ruleVisibilityOption=ruleVisibilityOption 
	 { $current=$iv_ruleVisibilityOption.current; } 
	 EOF 
;

// Rule VisibilityOption
ruleVisibilityOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'MODAL' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVisibilityOptionAccess().getNameMODALKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisibilityOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "MODAL");
	    }

)
)
    |(
(
		lv_name_1_0=	'VISIBLE' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getVisibilityOptionAccess().getNameVISIBLEKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVisibilityOptionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "VISIBLE");
	    }

)
))
;





// Entry rule entryRuleVisualCustomOption
entryRuleVisualCustomOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisualCustomOptionRule()); }
	 iv_ruleVisualCustomOption=ruleVisualCustomOption 
	 { $current=$iv_ruleVisualCustomOption.current; } 
	 EOF 
;

// Rule VisualCustomOption
ruleVisualCustomOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getVisualCustomOptionAccess().getNameTOKENParserRuleCall_0()); 
	    }
		lv_name_0_0=ruleTOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVisualCustomOptionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleCustomSection
entryRuleCustomSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomSectionRule()); }
	 iv_ruleCustomSection=ruleCustomSection 
	 { $current=$iv_ruleCustomSection.current; } 
	 EOF 
;

// Rule CustomSection
ruleCustomSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'CUSTOM' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getCustomSectionAccess().getNameCUSTOMKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomSectionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "CUSTOM");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomSectionAccess().getCust_valsCustomValueParserRuleCall_1_0()); 
	    }
		lv_cust_vals_1_0=ruleCustomValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomSectionRule());
	        }
       		add(
       			$current, 
       			"cust_vals",
        		lv_cust_vals_1_0, 
        		"CustomValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomSectionAccess().getENDKeyword_2());
    }
))
;





// Entry rule entryRuleCustomValue
entryRuleCustomValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomValueRule()); }
	 iv_ruleCustomValue=ruleCustomValue 
	 { $current=$iv_ruleCustomValue.current; } 
	 EOF 
;

// Rule CustomValue
ruleCustomValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCustomValueAccess().getTOKENParserRuleCall_0()); 
    }
ruleTOKEN
    { 
        afterParserOrEnumRuleCall();
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCustomValueAccess().getValueParserRuleCall_1()); 
    }
    this_Value_1=ruleValue
    { 
        $current = $this_Value_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomValueAccess().getSemicolonKeyword_2());
    }
)
;







// Entry rule entryRuleResourceOption
entryRuleResourceOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceOptionRule()); }
	 iv_ruleResourceOption=ruleResourceOption 
	 { $current=$iv_ruleResourceOption.current; } 
	 EOF 
;

// Rule ResourceOption
ruleResourceOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='FONT' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResourceOptionAccess().getFONTKeyword_0_0());
    }

    |	otherlv_1='VALUE' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getResourceOptionAccess().getVALUEKeyword_0_1());
    }

    |	otherlv_2='DESCRIPTION' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceOptionAccess().getDESCRIPTIONKeyword_0_2());
    }

    |	otherlv_3='FILENAME' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getResourceOptionAccess().getFILENAMEKeyword_0_3());
    }

    |	otherlv_4='LABEL' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getResourceOptionAccess().getLABELKeyword_0_4());
    }

    |	otherlv_5='URL' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getResourceOptionAccess().getURLKeyword_0_5());
    }

    |	otherlv_6='DALIIP' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getResourceOptionAccess().getDALIIPKeyword_0_6());
    }

    |	otherlv_7='CLUSTER' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getResourceOptionAccess().getCLUSTERKeyword_0_7());
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResourceOptionAccess().getVisualCustomOptionParserRuleCall_0_8()); 
    }
    this_VisualCustomOption_8=ruleVisualCustomOption
    { 
        $current = $this_VisualCustomOption_8.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getResourceOptionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceOptionAccess().getValsValueParserRuleCall_2_0()); 
	    }
		lv_vals_10_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceOptionRule());
	        }
       		set(
       			$current, 
       			"vals",
        		lv_vals_10_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getResourceOptionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleResourceOptions
entryRuleResourceOptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceOptionsRule()); }
	 iv_ruleResourceOptions=ruleResourceOptions 
	 { $current=$iv_ruleResourceOptions.current; } 
	 EOF 
;

// Rule ResourceOptions
ruleResourceOptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getResourceOptionsAccess().getRes_opsResourceOptionParserRuleCall_0_0()); 
	    }
		lv_res_ops_0_0=ruleResourceOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceOptionsRule());
	        }
       		add(
       			$current, 
       			"res_ops",
        		lv_res_ops_0_0, 
        		"ResourceOption");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getResourceOptionsAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceOptionsAccess().getRes_opsResourceOptionParserRuleCall_1_1_0()); 
	    }
		lv_res_ops_2_0=ruleResourceOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceOptionsRule());
	        }
       		add(
       			$current, 
       			"res_ops",
        		lv_res_ops_2_0, 
        		"ResourceOption");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleResourceValue
entryRuleResourceValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceValueRule()); }
	 iv_ruleResourceValue=ruleResourceValue 
	 { $current=$iv_ruleResourceValue.current; } 
	 EOF 
;

// Rule ResourceValue
ruleResourceValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getResourceValueAccess().getValueParserRuleCall_0()); 
    }
    this_Value_0=ruleValue
    { 
        $current = $this_Value_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getResourceValueAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceValueAccess().getRes_opsResourceOptionsParserRuleCall_2_0()); 
	    }
		lv_res_ops_2_0=ruleResourceOptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceValueRule());
	        }
       		set(
       			$current, 
       			"res_ops",
        		lv_res_ops_2_0, 
        		"ResourceOptions");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getResourceValueAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleResourceSection
entryRuleResourceSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceSectionRule()); }
	 iv_ruleResourceSection=ruleResourceSection 
	 { $current=$iv_ruleResourceSection.current; } 
	 EOF 
;

// Rule ResourceSection
ruleResourceSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'RESOURCES' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getResourceSectionAccess().getNameRESOURCESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceSectionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "RESOURCES");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResourceSectionAccess().getRes_valsResourceValueParserRuleCall_1_0()); 
	    }
		lv_res_vals_1_0=ruleResourceValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResourceSectionRule());
	        }
       		add(
       			$current, 
       			"res_vals",
        		lv_res_vals_1_0, 
        		"ResourceValue");
	        afterParserOrEnumRuleCall();
	    }

)
)+((	'END' 
)=>	otherlv_2='END' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getResourceSectionAccess().getENDKeyword_2());
    }
))
;





RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ECLNUMBEREDTYPE : ('UNICODE'|'STRING'|'UNSIGNED'|'INTEGER'|'QSTRING'|'VARSTRING'|'VARUNICODE'|'REAL') ('0'..'9')*;

RULE_ECLDECIMALTYPE : 'DECIMAL' ('0'..'9')*;

RULE_GEN_BLOCK : 'INLINE' ( options {greedy=false;} : . )*'ENDGENERATES';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


